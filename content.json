{"meta":{"title":"李晓鹏","subtitle":"Adam","description":"---Talk is cheap. Show me the code.","author":"Adam","url":"http://xpleeandroid.github.io"},"pages":[{"title":"标签","date":"2016-06-26T06:49:10.000Z","updated":"2016-06-28T05:42:00.664Z","comments":true,"path":"tags/index.html","permalink":"http://xpleeandroid.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Life Record of My 撒欢","slug":"MyGoldRetriever","date":"2016-08-31T05:42:32.000Z","updated":"2016-08-31T05:56:18.802Z","comments":true,"path":"2016/08/31/MyGoldRetriever/","link":"","permalink":"http://xpleeandroid.github.io/2016/08/31/MyGoldRetriever/","excerpt":"","text":"2016.08.31&#x5927;&#x6E05;&#x65E9;&#x7684;&#xFF0C;&#x968F;&#x5730;&#x5927;&#x5C0F;&#x4FBF;&#x4E86;&#x3002;","categories":[],"tags":[{"name":"撒欢","slug":"撒欢","permalink":"http://xpleeandroid.github.io/tags/撒欢/"}]},{"title":"SS用户说明","slug":"ss-user-guide","date":"2016-08-12T06:54:55.000Z","updated":"2016-08-12T06:57:46.375Z","comments":true,"path":"2016/08/12/ss-user-guide/","link":"","permalink":"http://xpleeandroid.github.io/2016/08/12/ss-user-guide/","excerpt":"","text":"ShadowSocks&#x4F7F;&#x7528;&#x8BF4;&#x660E;shadowsocks&#x662F;&#x4E00;&#x6B3E;&#x5F00;&#x6E90;&#x7684;&#x57FA;&#x4E8E;UDP&#x8F6C;&#x53D1;&#x7684;&#x5F00;&#x6E90;&#x7684;&#x79D1;&#x5B66;&#x4E0A;&#x7F51;&#x5DE5;&#x5177; &#x5BA2;&#x6237;&#x7AEF;&#x4E0B;&#x8F7D;&#x4E0E;&#x914D;&#x7F6E;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;https://shadowsocks.org/en/download/clients.html&#x63D0;&#x4F9B;&#x4E86;Windows,Mac OS X ,Linux ,Android,IOS,OpenWRT&#x7684;&#x5BA2;&#x6237;&#x7AEF; &#x914D;&#x7F6E;&#x6587;&#x4EF6;Shadowsocks&#x63A5;&#x6536;JSON&#x683C;&#x5F0F;&#x7684;&#x914D;&#x7F6E;,&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; { &quot;server&quot;:&quot;my_server_ip&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;table&quot;, &quot;auth&quot;: true } &#x5B57;&#x6BB5;&#x89E3;&#x91CA; server : &#x60A8;&#x7684;&#x4E3B;&#x673A;&#x540D;&#x6216;&#x8005;&#x670D;&#x52A1;&#x5668;IP&#x5730;&#x5740;&#xFF08;IPV4/IPV6&#xFF09; server_port : &#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53E3;&#x53F7; local_port : &#x672C;&#x673A;&#x7AEF;&#x53E3;&#x53F7; password : &#x7528;&#x4E8E;&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x7684;&#x5BC6;&#x7801; timeout :&#x94FE;&#x63A5;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#xFF0C;&#x5355;&#x4F4D;&#x6BEB;&#x79D2; method :&#x52A0;&#x5BC6;&#x65B9;&#x5F0F;&#xFF0C;&#x201C;bf-cfb&#x201D;,&#x201C;aes-256-cfb&#x201D;,&#x201D;des-cfb&#x201D;,&#x201D;rc4&#x201D;&#x7B49;&#x3002;&#x9ED8;&#x8BA4;&#x662F;table&#xFF0C;&#x5E76;&#x4E0D;&#x5B89;&#x5168;&#xFF0C;&#x201C;aes-256-cfb&#x201D;&#x662F;&#x63A8;&#x8350;&#x7684;&#x65B9;&#x5F0F; &#x3002; auth : &#x4E00;&#x6B21;&#x6027;&#x8BA4;&#x8BC1;&#xFF0C;true&#x8868;&#x793A;&#x5F00;&#x542F;&#x4E00;&#x6B21;&#x6027;&#x8BA4;&#x771F;&#x7279;&#x6027;&#x3002; &#x83B7;&#x53D6;&#x8D26;&#x53F7;&#x4E0E;&#x914D;&#x7F6E;&#x6587;&#x4EF6; 1 . &#x83B7;&#x53D6;SS&#x8D26;&#x53F7; &#x5230;http://216.158.86.233/ &#x83B7;&#x53D6;&#x6CE8;&#x518C;&#x51ED;&#x9080;&#x8BF7;&#x7801;&#x6CE8;&#x518C;&#x8D26;&#x53F7; 2 . Windows&#x5BA2;&#x6237;&#x7AEF; &#x4E0B;&#x8F7D;Windows&#x5BA2;&#x6237;&#x7AEF;&#x53CC;&#x51FB;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x5728;Windows&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x56FE;&#x6807;&#x533A;&#x57DF;&#x5C31;&#x4F1A;&#x591A;&#x4E00;&#x4E2A;&#x50CF;&#x7EB8;&#x98DE;&#x673A;&#x4E00;&#x6837;&#x7684;&#x56FE;&#x6807;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x7A0B;&#x5E8F;&#x9F20;&#x6807;&#x53F3;&#x952E;&#x70B9;&#x51FB;&#x8FD9;&#x4E2A;&#x7EB8;&#x98DE;&#x673A;&#x56FE;&#x6807;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x4E3B;&#x83DC;&#x5355;&#x628A;SS&#x8D26;&#x53F7;&#x7684;&#x4E8C;&#x7EF4;&#x7801;&#x56FE;&#x7247;&#x663E;&#x793A;&#x5728;&#x7535;&#x8111;&#x4E0A;&#xFF0C;&#x5728;Windows&#x7684;SS&#x5BA2;&#x6237;&#x7AEF;&#x4E0A;&#xFF08;&#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x662F;&#x624B;&#x673A;&#xFF09;&#x70B9;&#x51FB;&#x201C;&#x670D;&#x52A1;&#x5668;&#x9009;&#x62E9;&#x201D;&#xFF0C;&#x201C;&#x626B;&#x63CF;&#x5C4F;&#x5E55;&#x4E0A;&#x7684;&#x4E8C;&#x7EF4;&#x7801;&#x201D;&#xFF0C; &#x5BA2;&#x6237;&#x7AEF;&#x8F6F;&#x4EF6;&#x4F1A;&#x8BC6;&#x522B;&#x5C4F;&#x5E55;&#x4E0A;&#x7684;&#x4E8C;&#x7EF4;&#x7801;&#x81EA;&#x52A8;&#x914D;&#x7F6E;&#xFF08;&#x7535;&#x8111;&#x4E0D;&#x9700;&#x8981;&#x6709;&#x6444;&#x50CF;&#x5934;&#xFF09; &#x7136;&#x540E;&#x70B9;&#x51FB;&#x201C;&#x786E;&#x5B9A;&#x201D;&#x56DE;&#x5230;&#x4E3B;&#x83DC;&#x5355;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x542F;&#x7528;&#x4EE3;&#x7406;&#x201D;&#x548C;&#x201C;&#x5F00;&#x673A;&#x542F;&#x52A8;&#x201D;&#xFF0C;&#x8BA9;&#x8FD9;&#x4E24;&#x9879;&#x524D;&#x9762;&#x90FD;&#x6709;&#x5BF9;&#x53F7;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x9009;&#x62E9;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x5BA2;&#x6237;&#x7AEF;&#x5C31;&#x914D;&#x7F6E;&#x597D;&#x4E86;&#x3002; &#x5728;&#x4E3B;&#x83DC;&#x5355;&#x91CC;&#x9762;&#xFF0C;&#x70B9;&#x51FB;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;PAC&#x6A21;&#x5F0F;&#x6216;&#x8005;&#x5168;&#x5C40;&#x6A21;&#x5F0F;&#xFF0C;&#x524D;&#x8005;&#x7684;&#x610F;&#x601D;&#x662F;&#x53EA;&#x6709;&#x8BBF;&#x95EE;&#x88AB;&#x5899;&#x7684;&#x7F51;&#x7AD9;&#x624D;&#x901A;&#x8FC7;SS&#x8D26;&#x53F7;&#x8BBF;&#x95EE;&#xFF0C;&#x56FD;&#x5185;&#x7F51;&#x7AD9;&#x548C;&#x56FD;&#x5916;&#x6CA1;&#x6709;&#x88AB;&#x5899;&#x7684;&#x7F51;&#x7AD9;&#x4E0D;&#x901A;&#x8FC7;SS&#x8D26;&#x53F7;&#x3002;&#x5168;&#x5C40;&#x6A21;&#x5F0F;&#x5219;&#x662F;&#x6240;&#x6709;&#x8BBF;&#x95EE;&#x90FD;&#x8D70;SS&#x3002; 3 . MAC OS &#x7CFB;&#x7EDF; &#x53C2;&#x8003;OSX&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x8BF4;&#x660E;","categories":[],"tags":[{"name":"shadowsocks","slug":"shadowsocks","permalink":"http://xpleeandroid.github.io/tags/shadowsocks/"}]},{"title":"linux日常命令","slug":"daily-linux-command","date":"2016-08-10T03:30:06.000Z","updated":"2016-08-10T08:20:25.126Z","comments":true,"path":"2016/08/10/daily-linux-command/","link":"","permalink":"http://xpleeandroid.github.io/2016/08/10/daily-linux-command/","excerpt":"","text":"ps -aux | grep servers.py &#x67E5;&#x770B;servers.py&#x540E;&#x53F0;&#x8FDB;&#x7A0B; -aux &#x663E;&#x793A;&#x6240;&#x6709;&#x72B6;&#x6001; ps -ef | grep servers.py -e:&#x663E;&#x793A;&#x6240;&#x6709;&#x8FDB;&#x7A0B;&#xFF0C;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF1B;-f:&#x5168;&#x683C;&#x5F0F; -h &#x4E0D;&#x663E;&#x793A;&#x6807;&#x9898; kill -9 pid &#x5F3A;&#x5236;&#x6740;&#x6B7B;&#x8FDB;&#x7A0B;pid service iptabes stop &#x505C;&#x6B62;&#x9632;&#x706B;&#x5899; centos7&#x4E4B;&#x524D;&#x7248;&#x672C; chkconfig iptables off &#x7981;&#x7528;&#x9632;&#x706B;&#x5899; centos7&#x4E4B;&#x524D;&#x7248;&#x672C; systemctl stop firewalld.service &#x505C;&#x6B62;&#x9632;&#x706B;&#x5899; centos7 systemctl disable firewalld.service &#x7981;&#x7528;&#x9632;&#x706B;&#x5899; centos7 chmod -R 777 shadowsocks-rm mv ss-panel/{.,}* .; rmdir ss-panel &#x79FB;&#x52A8;ss-panel&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x5185;&#x5BB9;&#x5230;&#x4E0A;&#x7EA7;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x4E14;&#x5220;&#x9664;ss-panel&#x76EE;&#x5F55;","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://xpleeandroid.github.io/tags/linux/"}]},{"title":"安卓中使用ThreadPoolExcutor","slug":"using-threadpoolexcuter-in-android","date":"2016-07-29T02:14:02.000Z","updated":"2016-07-29T08:42:00.042Z","comments":true,"path":"2016/07/29/using-threadpoolexcuter-in-android/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/29/using-threadpoolexcuter-in-android/","excerpt":"&#x539F;&#x6587;&#x94FE;&#x63A5; https://medium.freecodecamp.com/threadpoolexecutor-in-android-8e9d22330ee3#.hiw1y4s2e &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; &#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x5C06;&#x6D89;&#x53CA;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x548C;&#x4ED6;&#x4EEC;&#x5728;Android&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x5F88;&#x591A;&#x7684;&#x5229;&#x7528;&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;&#xFF08;thoroughly&#xFF09;&#x4ECB;&#x7ECD;&#x8FD9;&#x4E9B;&#x4E3B;&#x9898;&#x3002;","text":"&#x539F;&#x6587;&#x94FE;&#x63A5; https://medium.freecodecamp.com/threadpoolexecutor-in-android-8e9d22330ee3#.hiw1y4s2e &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; &#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x5C06;&#x6D89;&#x53CA;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x548C;&#x4ED6;&#x4EEC;&#x5728;Android&#x4E2D;&#x7684;&#x4F7F;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x5F88;&#x591A;&#x7684;&#x5229;&#x7528;&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;&#xFF08;thoroughly&#xFF09;&#x4ECB;&#x7ECD;&#x8FD9;&#x4E9B;&#x4E3B;&#x9898;&#x3002; Thread Pools (&#x7EBF;&#x7A0B;&#x6C60;)&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x7BA1;&#x7406;&#x4E00;&#x6C60;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#xFF08;&#x51C6;&#x786E;&#x7684;&#x6570;&#x91CF;&#x4F9D;&#x8D56;&#x4E8E;&#x5B83;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF09;&#x3002;&#x4E00;&#x4E2A;task&#x961F;&#x5217;&#x7B49;&#x5F85;&#x6C60;&#x4E2D;&#x7684;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x961F;&#x5217;&#x4E2D;&#x7684;task.Task&#x88AB;&#x751F;&#x4EA7;&#x8005;&#x52A0;&#x5165;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4F5C;&#x4E3A;&#x6D88;&#x8D39;&#x8005;&#xFF0C;&#x53EA;&#x8981;&#x6C60;&#x4E2D;&#x6709;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x5728;&#x7B49;&#x5F85;&#x65B0;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x4F1A;&#x4ECE;task&#x961F;&#x5217;&#x4E2D;&#x6D88;&#x8D39;&#x4EFB;&#x52A1;&#x3002; ThreadPoolExcutorThreadPoolExcutor &#x4ECE;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;task&#x3002; ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor( int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue&lt;Runnable&gt; workQueue ); &#x53C2;&#x6570;&#x89E3;&#x91CA;&#xFF1A; corePoolSize: &#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x4FDD;&#x7559;&#x7EBF;&#x7A0B;&#x7684;&#x6700;&#x5C0F;&#x6570;&#x76EE;&#xFF0C;&#x6700;&#x5F00;&#x59CB;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x6CA1;&#x6709;&#x7EBF;&#x7A0B;&#xFF0C;&#x4F46;&#x662F;&#x968F;&#x7740;task&#x88AB;&#x52A0;&#x5165;&#x961F;&#x5217;&#xFF0C;&#x65B0;&#x7EBF;&#x7A0B;&#x88AB;&#x521B;&#x5EFA;&#x3002;&#x5982;&#x679C;&#x6709;&#x7A7A;&#x95F2;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x4F46;&#x662F;&#x7EBF;&#x7A0B;&#x7684;&#x6570;&#x76EE;&#x5C0F;&#x4E8E;corePoolSize&#xFF0C;&#x5C31;&#x4F1A;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x7EBF;&#x7A0B;&#x3002; maximumPoolSize: &#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7EBF;&#x7A0B;&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x8D85;&#x8FC7;corePoolSize,&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&gt;=corePoolSize,&#x90A3;&#x4E48;&#x53EA;&#x6709;&#x961F;&#x5217;&#x6EE1;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x3002; keepAliveTime: &#x5F53;&#x7EBF;&#x7A0B;&#x6570;&#x91CF;&#x8D85;&#x8FC7;corepoolsize&#xFF0C;&#x975E;corepoolsize&#x7684;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x5C06;&#x7B49;&#x5F85;&#x4E00;&#x4E2A;&#x65B0;&#x7684;task&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8FD9;&#x4E2A;&#x5B9A;&#x4E49;&#x7684;&#x65F6;&#x95F4;&#x53C2;&#x6570;&#x5185;&#x6CA1;&#x6709;&#x7B49;&#x5230;&#x65B0;&#x7684;task&#xFF0C;&#x8BE5;&#x7EBF;&#x7A0B;&#x5C06;&#x88AB;&#x7EC8;&#x6B62;&#x3002; unit&#xFF1A; keppAliveTime&#x7684;&#x65F6;&#x95F4;&#x5355;&#x4F4D; workQueue: task&#x961F;&#x5217;&#xFF0C;&#x6301;&#x6709;runnable task&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x4E00;&#x4E2A;BlockingQueue. &#x4E3A;&#x4EC0;&#x4E48;&#x5728;Android&#x548C;JAVA&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x4F7F;&#x7528;Thread Pool Executor? &#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x5927;&#x7684;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x6846;&#x67B6;&#xFF0C;&#x652F;&#x6301;&#x4EFB;&#x52A1;&#x6DFB;&#x52A0;&#x5230;&#x961F;&#x5217;&#xFF0C;&#x4EFB;&#x52A1;&#x53D6;&#x6D88;&#xFF0C;&#x4EFB;&#x52A1;&#x4F18;&#x5148;&#x7EA7;&#x3002; &#x964D;&#x4F4E;&#x4E86;&#x7EBF;&#x7A0B;&#x521B;&#x5EFA;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x5B83;&#x5728;&#x7EBF;&#x7A0B;&#x6C60;&#x5185;&#x7BA1;&#x7406;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x7EBF;&#x7A0B;&#x3002; &#x5728;Android&#x4E2D;&#x4F7F;&#x7528;ThreadPoolExcutor&#x9996;&#x5148;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;PriorityThreadFactory: import android.os.Process; import java.util.concurrent.ThreadFactory; /** * Created by Adam on 2016/7/29. */ public class PriorityThreadFactory implements ThreadFactory { private final int mThreadPrority; public PriorityThreadFactory(int mThreadPrority) { this.mThreadPrority = mThreadPrority; } @Override public Thread newThread(final Runnable r) { Runnable runnable = new Runnable() { @Override public void run() { try { Process.setThreadPriority(mThreadPrority); } catch (IllegalArgumentException e) { e.printStackTrace(); } catch (SecurityException e) { e.printStackTrace(); } r.run(); ; } }; return new Thread(runnable); } } &#x521B;&#x5EFA;&#x4E00;&#x4E2A;MainThreadExecutor: import android.os.Handler; import android.os.Looper; import java.util.concurrent.Executor; /** * Created by Adam on 2016/7/29. */ public class MainThreadExecutor implements Executor { private final Handler handler = new Handler(Looper.getMainLooper()); @Override public void execute(Runnable command) { handler.post(command); } } &#x521B;&#x5EFA;&#x4E00;&#x4E2A;DefaultExecutorSupplier: import android.os.Process; import java.util.concurrent.Executor; import java.util.concurrent.LinkedBlockingDeque; import java.util.concurrent.LinkedBlockingQueue; import java.util.concurrent.ThreadFactory; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; /** * Created by Adam on 2016/7/29. */ public class DefaultExecutorSupplier { /* *&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#x6570;&#x91CF; */ public static final int NUMBER_OF_CORES = Runtime.getRuntime().availableProcessors(); /** * &#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x7EBF;&#x7A0B;&#x6C60; */ private final ThreadPoolExecutor mForBackgroundTasks; /** * &#x8F7B;&#x91CF;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x7EBF;&#x7A0B;&#x6C60; */ private final ThreadPoolExecutor mForLightWeightBackgroundTasks; /** * &#x4E3B;&#x7EBF;&#x7A0B;&#x4EFB;&#x52A1;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;executor */ private final Executor mMainThreadExcutor; private static DefaultExecutorSupplier mInstance; /** * &#x8FD4;&#x56DE;DefaultExecutorSupplier&#x7684;&#x5B9E;&#x4F8B; */ public static DefaultExecutorSupplier getInstance() { if (mInstance == null) { synchronized (DefaultExecutorSupplier.class) { mInstance = new DefaultExecutorSupplier(); } } return mInstance; } private DefaultExecutorSupplier() { ThreadFactory backgroundPriorityThreadFactory = new PriorityThreadFactory(Process.THREAD_PRIORITY_BACKGROUND); mForBackgroundTasks = new ThreadPoolExecutor( NUMBER_OF_CORES * 2, NUMBER_OF_CORES * 2, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue&lt;Runnable&gt;(), backgroundPriorityThreadFactory ); mForLightWeightBackgroundTasks = new ThreadPoolExecutor( NUMBER_OF_CORES * 2, NUMBER_OF_CORES * 2, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue&lt;Runnable&gt;(), backgroundPriorityThreadFactory ); mMainThreadExcutor = new MainThreadExecutor(); } /* * returns the thread pool executor for background task */ public ThreadPoolExecutor forBackgroundTasks() { return mForBackgroundTasks; } /* * returns the thread pool executor for light weight background task */ public ThreadPoolExecutor forLightWeightBackgroundTasks() { return mForLightWeightBackgroundTasks; } /* * returns the thread pool executor for main thread task */ public Executor forMainThreadTasks() { return mMainThreadExcutor; } } &#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x540C;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x6570;&#x91CF;&#x4F9D;&#x8D56;&#x4E8E;&#x4F60;&#x7684;&#x9700;&#x6C42; &#x73B0;&#x5728;&#x5728;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x8FD9;&#x6837;&#x4F7F;&#x7528; /* * &#x540E;&#x53F0;&#x4EFB;&#x52A1; */ public void doSomeBackgroundWork() { DefaultExecutorSupplier.getInstance().forBackgroundTasks() .execute(new Runnable() { @Override public void run() { // &#x5728;&#x8FD9;&#x91CC;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;. } }); } /* * &#x8F7B;&#x91CF;&#x540E;&#x53F0;&#x4EFB;&#x52A1; */ public void doSomeLightWeightBackgroundWork() { DefaultExecutorSupplier.getInstance().forLightWeightBackgroundTasks() .execute(new Runnable() { @Override public void run() { // &#x5728;&#x8FD9;&#x91CC;&#x505A;&#x4E00;&#x4E9B;&#x8F7B;&#x91CF;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;. } }); } /* * &#x4E3B;&#x7EBF;&#x7A0B;&#x4EFB;&#x52A1; */ public void doSomeMainThreadWork() { DefaultExecutorSupplier.getInstance().forMainThreadTasks() .execute(new Runnable() { @Override public void run() { // &#x505A;&#x4E00;&#x4E9B;&#x4E2D;&#x7EBF;&#x7A0B;&#x5DE5;&#x4F5C;. } }); } &#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E3A;&#x7F51;&#x7EDC;&#x4EFB;&#x52A1;&#xFF0C;I/O&#x4EFB;&#x52A1;&#xFF0C;&#x91CD;&#x578B;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x548C;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x521B;&#x5EFA;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x3002; &#x600E;&#x6837;&#x53D6;&#x6D88;&#x4E00;&#x4E2A;task&#xFF1F;&#x4E3A;&#x4E86;&#x53D6;&#x6D88;&#x4E00;&#x4E2A;task&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x5F97;&#x5230;task&#x7684;future&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4E0D;&#x8981;&#x4F7F;&#x7528;execute&#xFF0C;&#x4F7F;&#x7528;submit&#xFF0C;&#x5C06;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;future&#x3002;&#x73B0;&#x5728;future&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x53D6;&#x6D88;task&#x4E86;&#x3002; Future future= DefaultExecutorSupplier.getInstance().forBackgroundTasks() .submit(new Runnable() { @Override public void run() { } }); future.cancel(true); &#x5982;&#x4F55;&#x8BBE;&#x7F6E;task&#x7684;&#x4F18;&#x5148;&#x7EA7;&#xFF1F;&#x5047;&#x8BBE;&#x961F;&#x5217;&#x91CC;&#x6709;20&#x4E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x6301;&#x6709;4&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x6839;&#x636E;task&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x5904;&#x7406;&#x4ED6;&#x4EEC;&#xFF0C;&#x56E0;&#x4E3A;&#x7EBF;&#x7A0B;&#x6C60;&#x6B64;&#x65F6;&#x540C;&#x65F6;&#x53EF;&#x5904;&#x7406;4&#x4E2A;&#x7EBF;&#x7A0B;&#x3002; &#x4F46;&#x662F;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x6700;&#x540E;&#x63A8;&#x8FDB;&#x961F;&#x5217;&#x7684;&#x4EFB;&#x52A1;&#x6700;&#x5148;&#x6267;&#x884C;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x8BE5;&#x4EFB;&#x52A1;&#x8BBE;&#x7F6E;&#x7ACB;&#x5373;&#x7684;&#x4F18;&#x5148;&#x5F53;&#x7EBF;&#x7A0B;&#x4ECE;&#x961F;&#x5217;&#x91CC;&#x62FF;&#x53D6;&#x65B0;&#x4EFB;&#x52A1;&#x65F6;&#x3002; &#x4E3A;&#x4E86;&#x8BBE;&#x7F6E;&#x4EFB;&#x52A1;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;executor&#x3002; &#x4E3A;&#x4F18;&#x5148;&#x7EA7;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x7C7B;: /** * Created by Adam on 2016/7/29. */ public enum Priority { /** * &#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x8981;&#x5728;&#x4EFB;&#x4F55;&#x60C5;&#x51B5;&#x4E0B;&#x6539;&#x53D8;&#x987A;&#x5E8F;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x4F7F;&#x6392;&#x5E8F;&#x4E0D;&#x51C6;&#x786E; */ /** * &#x6700;&#x4F4E;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x9884;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x7528; */ LOW, /** * &#x4E2D;&#x4F18;&#x5148;&#x7EA7; */ MEDIUM, /** * &#x9AD8;&#x4F18;&#x5148;&#x7EA7; */ HIGH, /** * &#x7ACB;&#x5373; */ IMMEDIATE, } &#x521B;&#x5EFA;&#x4E00;&#x4E2A;PriorityRunnablepublic class PriorityRunnable implements Runnable { private final Priority priority; public PriorityRunnable(Priority priority) { this.priority = priority; } @Override public void run() { } public Priority getPriority(){ return priority; } } &#x521B;&#x5EFA;&#x4E00;&#x4E2A;PriorityThreadPoolExecutor,&#x7EE7;&#x627F;&#x81EA;ThreadPoolExecutor.&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x521B;&#x5EFA;PriorityFutureTask,&#x5C06;&#x5B9E;&#x73B0;Comparable&#x63A5;&#x53E3;&#x3002; import java.util.concurrent.BlockingQueue; import java.util.concurrent.Callable; import java.util.concurrent.Future; import java.util.concurrent.FutureTask; import java.util.concurrent.PriorityBlockingQueue; import java.util.concurrent.ThreadFactory; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; /** * Created by Adam on 2016/7/29. */ public class PriorityThreadPoolExecutor extends ThreadPoolExecutor { public PriorityThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue&lt;Runnable&gt; workQueue, ThreadFactory threadFactory) { super(corePoolSize, maximumPoolSize, keepAliveTime, unit, new PriorityBlockingQueue&lt;Runnable&gt;(), threadFactory); } @Override public Future&lt;?&gt; submit(Runnable task) { PriorityFutureTask futureTask = new PriorityFutureTask((PriorityRunnable) task); execute(futureTask); return futureTask; } private static final class PriorityFutureTask extends FutureTask&lt;PriorityRunnable&gt; implements Comparable&lt;PriorityFutureTask&gt; { private final PriorityRunnable priorityRunnable; public PriorityFutureTask(PriorityRunnable priorityRunnable) { super(priorityRunnable, null); this.priorityRunnable = priorityRunnable; } @Override public int compareTo(PriorityFutureTask another) { Priority p1 = priorityRunnable.getPriority(); Priority p2 = another.priorityRunnable.getPriority(); return p2.ordinal() - p1.ordinal(); } } } &#x9996;&#x5148;&#x5728;DefaultExcutorSupplier,&#x7528;PriorityThreadPoolExecutor&#x4EE3;&#x66FF;ThreadPoolExecutor. ThreadFactory backgroundPriorityThreadFactory = new PriorityThreadFactory(Process.THREAD_PRIORITY_BACKGROUND); // mForBackgroundTasks = new ThreadPoolExecutor( // NUMBER_OF_CORES * 2, // NUMBER_OF_CORES * 2, // 60L, // TimeUnit.SECONDS, // new LinkedBlockingQueue&lt;Runnable&gt;(), // backgroundPriorityThreadFactory // // ); mForBackgroundTasks=new PriorityThreadPoolExecutor( NUMBER_OF_CORES * 2, NUMBER_OF_CORES * 2, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue&lt;Runnable&gt;(), backgroundPriorityThreadFactory ); &#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x6F14;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x8BBE;&#x7F6E;&#x9AD8;&#x4F18;&#x5148;&#x7EA7;&#xFF1A; public void doSomeTaskAtHighPriority(){ DefaultExecutorSupplier.getInstance().forBackgroundTasks() .submit(new PriorityRunnable(Priority.HIGH){ @Override public void run() { super.run(); } }); }","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://xpleeandroid.github.io/tags/android/"},{"name":"翻译","slug":"翻译","permalink":"http://xpleeandroid.github.io/tags/翻译/"}]},{"title":"安卓计算下载速度","slug":"android-calculate-download-speed","date":"2016-07-28T03:23:13.000Z","updated":"2016-07-28T03:41:16.658Z","comments":true,"path":"2016/07/28/android-calculate-download-speed/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/28/android-calculate-download-speed/","excerpt":"&#x6628;&#x5929;&#x5F00;&#x59CB;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5B89;&#x5353;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#x5668;&#xFF0C;&#x5728;&#x5199;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x731C;&#x6D4B;&#x60F3;&#x52A0;&#x5165;&#x68C0;&#x6D4B;&#x4E0B;&#x8F7D;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x4E8E;&#x662F;google&#x4E00;&#x756A;&#xFF0C;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x7B54;&#x6848;&#xFF0C;&#x5728;&#x6B64;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x3002;","text":"&#x6628;&#x5929;&#x5F00;&#x59CB;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5B89;&#x5353;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#x5668;&#xFF0C;&#x5728;&#x5199;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x731C;&#x6D4B;&#x60F3;&#x52A0;&#x5165;&#x68C0;&#x6D4B;&#x4E0B;&#x8F7D;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x4E8E;&#x662F;google&#x4E00;&#x756A;&#xFF0C;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x7B54;&#x6848;&#xFF0C;&#x5728;&#x6B64;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x3002; NANOSECONDSNANOSECONDS&#xFF0C;&#x6BEB;&#x5FAE;&#x79D2;&#xFF0C;&#x5341;&#x4EBF;&#x5206;&#x4E4B;&#x4E00;&#x79D2;&#xFF0C;1s=1000000000&#x6BEB;&#x5FAE;&#x79D2;&#x3002; CODE EXAMPLE long start = System.nanoTime(); //&#x5F00;&#x59CB;&#x65F6;&#x95F4; long totalRead = 0; //&#x603B;&#x5171;&#x4E0B;&#x8F7D;&#x4E86;&#x591A;&#x5C11; final double NANOS_PER_SECOND = 1000000000.0; //1&#x79D2;=10&#x4EBF;nanoseconds final double BYTES_PER_MIB = 1024 * 1024; //1M=1024*1024byte while (((len = is.read(buffler, 0, 1024)) &gt;0)) { totalRead += len; double speed = NANOS_PER_SECOND / BYTES_PER_MIB * totalRead / (System.nanoTime() - start + 1); } WARNING&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x8BA1;&#x7B97;&#x7684;&#x662F;&#x4ECE;start&#x5F00;&#x59CB;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x5747;&#x901F;&#x5EA6;&#xFF0C;&#x4E0D;&#x662F;&#x5B9E;&#x65F6;&#x901F;&#x5EA6;&#x3002;","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://xpleeandroid.github.io/tags/android/"}]},{"title":"Android拍照上传至PHP服务器并写入MySql数据库(下)","slug":"android-upload-img-to-php-server-2","date":"2016-07-22T07:45:32.000Z","updated":"2016-07-22T08:02:25.418Z","comments":true,"path":"2016/07/22/android-upload-img-to-php-server-2/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/22/android-upload-img-to-php-server-2/","excerpt":"Android&#x5B9E;&#x73B0;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;&#x76F8;&#x673A;&#xFF0C;&#x62CD;&#x7167;&#xFF1A; Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); getFileUri(); intent.putExtra(MediaStore.EXTRA_OUTPUT, file_uri); startActivityForResult(intent, CODE_CAMERA); private void getFileUri() { image_name = Calendar.getInstance().getTimeInMillis() + &quot;.jpg&quot;; file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) + File.separator + image_name); file_uri = Uri.fromFile(file); }","text":"Android&#x5B9E;&#x73B0;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;&#x76F8;&#x673A;&#xFF0C;&#x62CD;&#x7167;&#xFF1A; Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); getFileUri(); intent.putExtra(MediaStore.EXTRA_OUTPUT, file_uri); startActivityForResult(intent, CODE_CAMERA); private void getFileUri() { image_name = Calendar.getInstance().getTimeInMillis() + &quot;.jpg&quot;; file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) + File.separator + image_name); file_uri = Uri.fromFile(file); } &#x5728;onActivityResult&#x91CC;&#x9762;&#x63A5;&#x6536;&#x56FE;&#x7247;&#x5E76;Base64&#x5904;&#x7406;&#xFF1A; @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { if (requestCode == CODE_CAMERA &amp;&amp; resultCode == RESULT_OK) { new EncodeImage().execute(); //&#x628A;bitmap&#x8F6C;&#x6362;&#x6210;base64&#x5B57;&#x7B26;&#x4E32; } } EncodeImage&#x662F;&#x4E00;&#x4E2A;AsyncTask&#xFF0C;doInBackground&#x91CC;&#x9762;&#x4ECE;uri&#x91CC;&#x9762;&#x83B7;&#x53D6;bitmap&#xFF0C;&#x7136;&#x540E;&#x8F6C;&#x5165;&#x8F93;&#x51FA;&#x6D41;&#xFF0C;&#x6700;&#x7EC8;&#x8F6C;&#x6362;&#x4E3A;base64&#x7F16;&#x7801;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; @Override protected Void doInBackground(Void... voids) { bitmap = BitmapFactory.decodeFile(file_uri.getPath()); ByteArrayOutputStream stream = new ByteArrayOutputStream(); bitmap.compress(Bitmap.CompressFormat.JPEG, 80, stream); byte[] array = stream.toByteArray(); encoded_string = Base64.encodeToString(array, 0); bitmap.recycle(); //&#x9632;&#x6B62;oom return null; } &#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x4E0A;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E86;&#xFF1A; private void uploadImage() { HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;(); map.put(&quot;encoding_string&quot;, encoded_string); map.put(&quot;image_name&quot;, image_name); OkHttpUtils.post() .url(&quot;http:192.168.0.112/phpdemo/uploadimage.php&quot;) .params(map) .tag(this) .build() .execute(new StringCallback() { @Override public void onError(Call call, Exception e, int id) { Log.e(&quot;&#x51FA;&#x9519;&#x4E86;&quot;, &quot;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF1A;&quot; + e.getMessage()); } @Override public void onResponse(String response, int id) { Log.e(&quot;&#x6210;&#x529F;or&#x5931;&#x8D25;&quot;, &quot;&#x4FE1;&#x606F;&#xFF1A;&quot; + response); } }); } &#x5728;&#x4E0A;&#x4F20;&#x670D;&#x52A1;&#x5668;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x7B2C;&#x4E00;,&#x63D0;&#x793A;POST Content-Length of ... bytes exceeds the limit of 8388608 bytes,&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x662F;&#x56E0;&#x4E3A;php&#x9ED8;&#x8BA4;&#x6700;&#x5927;post&#x4E0A;&#x4F20;8M,&#x66F4;&#x6539;php.ini&#x91CC;&#x9762;&#x7684;post_max_size=1000M&#x5C31;ok&#x4E86;&#xFF1B;&#x7B2C;&#x4E8C;&#xFF0C;&#x5F53;&#x7B2C;&#x4E8C;&#x6B21;&#x62CD;&#x7167;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;OOM&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x53D1;&#x73B0;bitmap&#x6CA1;&#x6709;recycle&#x3002; OVER","categories":[],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xpleeandroid.github.io/tags/PHP/"},{"name":"Android","slug":"Android","permalink":"http://xpleeandroid.github.io/tags/Android/"}]},{"title":"Android拍照上传至PHP服务器并写入MySql数据库(上)","slug":"android-upload-img-to-php-server-1","date":"2016-07-21T08:45:00.000Z","updated":"2016-07-22T07:47:25.904Z","comments":true,"path":"2016/07/21/android-upload-img-to-php-server-1/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/21/android-upload-img-to-php-server-1/","excerpt":"&#x9700;&#x6C42;&#x5206;&#x6790;&#x9700;&#x6C42;&#x5F88;&#x7B80;&#x5355;&#xFF0C;Android&#x5BA2;&#x6237;&#x7AEF;&#x70B9;&#x51FB;&#x62CD;&#x7167;&#x540E;&#xFF0C;&#x8FDB;&#x884C;Base64&#x52A0;&#x5BC6;&#xFF0C;&#x81EA;&#x52A8;&#x4E0A;&#x4F20;&#x81F3;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x63A5;&#x6536;&#x4E0A;&#x4F20;&#x7684;&#x6570;&#x636E;&#x5E76;&#x89E3;&#x5BC6;&#x540E;&#x4FDD;&#x5B58;&#x5230;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x5E76;&#x5C06;&#x56FE;&#x7247;&#x4FE1;&#x5FC3;&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x76F8;&#x5E94;&#x7684;Json&#x6570;&#x636E;&#x3002;","text":"&#x9700;&#x6C42;&#x5206;&#x6790;&#x9700;&#x6C42;&#x5F88;&#x7B80;&#x5355;&#xFF0C;Android&#x5BA2;&#x6237;&#x7AEF;&#x70B9;&#x51FB;&#x62CD;&#x7167;&#x540E;&#xFF0C;&#x8FDB;&#x884C;Base64&#x52A0;&#x5BC6;&#xFF0C;&#x81EA;&#x52A8;&#x4E0A;&#x4F20;&#x81F3;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x63A5;&#x6536;&#x4E0A;&#x4F20;&#x7684;&#x6570;&#x636E;&#x5E76;&#x89E3;&#x5BC6;&#x540E;&#x4FDD;&#x5B58;&#x5230;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x5E76;&#x5C06;&#x56FE;&#x7247;&#x4FE1;&#x5FC3;&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x76F8;&#x5E94;&#x7684;Json&#x6570;&#x636E;&#x3002; &#x6570;&#x636E;&#x5E93;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5E93;&#x540D;&#x79F0;&#x4E3A; turtorial_upload_image: CREATE DATABASE tutorial_upload_image; &#x521B;&#x5EFA;&#x8868;&#x6211;&#x4EEC;&#x8981;&#x4FDD;&#x5B58;&#x7684;&#x4FE1;&#x606F;&#x662F;&#x56FE;&#x7247;&#x7684;&#x540D;&#x79F0;&#x548C;&#x56FE;&#x7247;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8868;&#x540D;&#x79F0;&#x662F;photos&#xFF1A; CREATE TABLE photos( id INT(32) NOT NULL AUTO_INCREMENT, name VARCHAR(30) NOT NULL, path VARCHAR(30) NOT NULL, PRIMARY KEY(id) ); PHP&#x5148;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A; &lt;?php /** * Created by PhpStorm. * User: Adam * Date: 2016/7/21 * Time: 15:01 */ header(&apos;Content-type &#xFF1A; bitmap; charset=utf-8;&apos;); $dbms = &apos;mysql&apos;; //&#x6570;&#x636E;&#x5E93;&#x7C7B;&#x578B; $host = &apos;localhost&apos;; //&#x6570;&#x636E;&#x5E93;&#x4E3B;&#x673A;&#x540D; $dbName = &apos;tutorial_upload_image&apos;; //&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x5E93; $user = &apos;root&apos;; //&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x7528;&#x6237;&#x540D; $pass = &apos;&apos;; //&#x5BF9;&#x5E94;&#x7684;&#x5BC6;&#x7801; $dsn = &quot;$dbms:host=$host;dbname=$dbName&quot;; if (isset($_POST[&quot;encoding_string&quot;])) { $encoding_string = $_POST[&quot;encoding_string&quot;]; $image_name = $_POST[&quot;image_name&quot;]; //decode &#x5BA2;&#x6237;&#x7AEF;&#x4E0A;&#x4F20;&#x7684;base64&#x6570;&#x636E; $decoded_string = base64_decode($encoding_string); $path = &quot;images/&quot; . $image_name; //&#x5B9A;&#x4E49;&#x5B58;&#x653E;&#x8DEF;&#x5F84; $file = fopen($path, &quot;wb&quot;); $is_written = fwrite($file, $decoded_string); fclose($file); //&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93; if ($is_written &gt; 0) { //sql&#x8BED;&#x53E5; $strSql = &quot;insert into photos(name,path) values(&apos;$image_name&apos;,&apos;$path&apos;)&quot;; //&#x65B9;&#x6CD5;&#x4E00; pdo&#x65B9;&#x5F0F; &#x652F;&#x6301;&#x591A;&#x79CD;&#x6570;&#x636E;&#x5E93; try { $dbh = new PDO($dsn, $user, $pass); //&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;PDO&#x5BF9;&#x8C61; $temp = $dbh-&gt;prepare($strSql); $temp-&gt;execute(); $array = array( &quot;status&quot; =&gt; true, &quot;msg&quot; =&gt; &quot;&#x63D2;&#x5165;&#x6570;&#x636E;&#x6210;&#x529F;&quot; ); echo json_encode($array); $dbh = null; //&#x8FD0;&#x884C;&#x5B8C;&#x6210;&#x540E;&#x5173;&#x95ED;&#x94FE;&#x63A5; } catch (PDOException $e) { $array = array( &quot;status&quot; =&gt; false, &quot;msg&quot; =&gt; &quot;&#x63D2;&#x5165;&#x6570;&#x636E;&#x5931;&#x8D25;&quot; . ($e-&gt;getMessage()) ); echo json_encode($array); } //&#x65B9;&#x6CD5;2 mysqli&#x65B9;&#x5F0F; // $connection=mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;&apos;,&apos;tutorial_upload_image&apos;); // $result=mysqli_query($connection,$strSql); // if($result){ // $array = array ( // &quot;status&quot; =&gt; true, // &quot;msg&quot; =&gt; &quot;&#x63D2;&#x5165;&#x6570;&#x636E;&#x6210;&#x529F;&quot; // ); // echo json_encode($array); // }else{ // $array = array ( // &quot;status&quot; =&gt; false, // &quot;msg&quot; =&gt; &quot;&#x63D2;&#x5165;&#x6570;&#x636E;&#x5931;&#x8D25;&quot; // ); // echo json_encode($array); // } // mysqli_close($connection); //&#x5173;&#x95ED;&#x8FDE;&#x63A5; } } ?&gt; &#x8FD9;&#x91CC;&#x6211;&#x5217;&#x4E3E;&#x4E86;&#x4E24;&#x79CD;&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65B9;&#x5F0F; PDO&#x548C;mysqli &#xFF0C;mysql&#x65B9;&#x5F0F;&#x5B98;&#x65B9;&#x5DF2;&#x7ECF;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x4E0D;&#x518D;&#x5217;&#x4E3E;&#xFF08;&#x6211;&#x4E5F;&#x6CA1;&#x7528;&#x8FC7;&#xFF09;&#x3002;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x8FC7;&#x7A0B;&#x9996;&#x5148;&#x662F;&#x8BFB;&#x53D6;POST&#x8FC7;&#x6765;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5230;images&#x76EE;&#x5F55;&#x4E0B;&#x9762;&#xFF0C;&#x518D;&#x628A;&#x5730;&#x5740;&#x548C;&#x540D;&#x79F0;&#x5199;&#x5165;&#x6570;&#x636E;&#x5E93;&#x91CC;&#xFF0C;&#x8FD4;&#x56DE;&#x76F8;&#x5E94;&#x7684;JSON&#x6570;&#x636E;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6BCF;&#x6B21;&#x4E0A;&#x4F20;&#x5B8C;&#x6BD5;&#x540E;&#x90FD;&#x5173;&#x95ED;&#x4E86;&#x8FDE;&#x63A5;&#x3002; &#x6D4B;&#x8BD5;&#x6D4B;&#x8BD5;&#x9636;&#x6BB5;&#x6211;&#x4EEC;&#x627E;&#x7528;postman&#x8FDB;&#x884C;&#x6A21;&#x62DF;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x9996;&#x5148;&#x5728;&#x8FD9;&#x4E2A;&#x7F51;&#x7AD9;Base64 encode&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x590D;&#x5236;&#x4E4B;&#x540E;&#xFF0C;&#x62F7;&#x8D1D;&#x5230;postman&#x91CC;&#x9762;&#xFF0C;postman&#x6570;&#x636E;&#x5982;&#x4E0B;&#xFF1A; &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x6210;&#x529F;~ &#x4E0B;&#x8282;&#x6211;&#x4EEC;&#x5C06;&#x5F00;&#x53D1;&#x5B89;&#x5353;&#x5BA2;&#x6237;&#x7AEF;&#x3002;","categories":[],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xpleeandroid.github.io/tags/PHP/"},{"name":"Android","slug":"Android","permalink":"http://xpleeandroid.github.io/tags/Android/"}]},{"title":"anonymous","slug":"newsapi","date":"2016-07-20T08:12:35.000Z","updated":"2016-07-20T08:16:24.973Z","comments":true,"path":"2016/07/20/newsapi/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/20/newsapi/","excerpt":"register(host club.qingdaonews.com)","text":"register(host club.qingdaonews.com) step1 /user/touch_reg.php param: act=regstep1&amp;reg_un=adamin90&amp;reg_pw=wsxqaz123&amp;con_pw=wsxqaz123&amp;tel=15725266012 error response :{&#x201C;result&#x201D;:&#x201D;error&#x201D;,&#x201D;type&#x201D;:&#x201D;tel&#x201D;,&#x201D;info&#x201D;:&#x201D;\\u6b64\\u624b\\u673a\\u53f7\\u5df2\\u7ecf\\u6ce8\\u518c(\\u9ad8)&#x201D;} success response :{&#x201C;result&#x201D;:&#x201D;success&#x201D;,&#x201D;type&#x201D;:&#x201D;code&#x201D;,&#x201D;info&#x201D;:&#x201D;\\u53d1\\u9001\\u6210\\u529f&#x201D;} login (host app.qingdaonews.com) /shoujikehuduan/interface_login.php?username=15725266012&amp;password=wsxqaz success response :{&#x201C;result&#x201D;:&#x201D;success&#x201D;,&#x201D;point&#x201D;:&#x201D;200&#x201D;,&#x201D;uid&#x201D;:&#x201D;8087267&#x201D;,&#x201D;phone&#x201D;:&#x201D;15725266012&#x201D;,&#x201D;first&#x201D;:0,&#x201D;token&#x201D;:&#x201D;52165771559e88f430573c6cd0925e68&#x201D;,&#x201D;money&#x201D;:&#x201D;0&#x201D;,&#x201D;face&#x201D;:&#x201D;http:\\/\\/pic.qingdaonews.com\\/f\\/avatar_big.jpg&#x201D;,&#x201D;type&#x201D;:&#x201D;passport&#x201D;,&#x201D;username&#x201D;:&#x201D;15725266012&#x201D;,&#x201D;loginname&#x201D;:&#x201D;15725266012&#x201D;,&#x201D;password&#x201D;:&#x201D;wsxqaz&#x201D;} error response :{&#x201C;result&#x201D;:&#x201D;error&#x201D;,&#x201D;point&#x201D;:null,&#x201D;uid&#x201D;:&#x201D;&#x201D;,&#x201D;phone&#x201D;:null,&#x201D;first&#x201D;:0,&#x201D;face&#x201D;:&#x201D;http:\\/\\/pic.qingdaonews.com\\/f\\/avatar_big.jpg&#x201D;,&#x201D;type&#x201D;:&#x201D;passport&#x201D;,&#x201D;username&#x201D;:&#x201D;15725266019&#x201D;,&#x201D;loginname&#x201D;:&#x201D;15725266019&#x201D;,&#x201D;password&#x201D;:&#x201D;123456&#x201D;} &#x7B7E;&#x5230; post app.qingdaonews.com/shoujikehuduan/interface_missionstate.php?token=52165771559e88f430573c6cd0925e68&amp;mission=mis_10 &#x5934;&#x6761;/shoujikehuduan/mdi_newslist300.php?v=2.0&amp;num=20&amp;type=bd /shoujikehuduan/mdi_newslist300.php?v=2.0&amp;num=20&amp;type=bd&amp;minid=463459 &#x9752;&#x9752;&#x5C9B;/imobile/index.php?page=1&amp;title=%E5%A4%B4%E6%9D%A1&amp;type=newsapp &#x7126;&#x70B9;/shoujikehuduan/mdi_newslist300.php?v=2.0&amp;num=20&amp;type=jdxw /shoujikehuduan/mdi_newslist300.php?v=2.0&amp;num=20&amp;type=jdxw&amp;minid=462981 &#x4F53;&#x80B2;/shoujikehuduan/mdi_newslist300.php?v=2.0&amp;num=20&amp;type=ty &#x6587;&#x5A31;yl &#x623F;&#x4EA7;qdfc &#x6C7D;&#x8F66;qdqc &#x65C5;&#x6E38;qdly &#x5BB6;&#x5C45;qdjj &#x8D22;&#x7ECF;cj &#x6559;&#x80B2;jy &#x5065;&#x5EB7;jk &#x6D88;&#x8D39;xf &#x8206;&#x60C5;yuqing &#x5A5A;&#x5047;hj &#x6C11;&#x751F;msbl &#x9EC4;&#x5C9B; huangdao","categories":[],"tags":[{"name":"api","slug":"api","permalink":"http://xpleeandroid.github.io/tags/api/"}]},{"title":"English Jokes（英文笑话）","slug":"English-Jokes","date":"2016-07-07T06:43:44.000Z","updated":"2016-07-07T07:04:33.191Z","comments":true,"path":"2016/07/07/English-Jokes/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/07/English-Jokes/","excerpt":"1. &#x5341;&#x4E2A;&#x5927;&#x5175;&#x4E0E;&#x4E24;&#x4E2A;&#x5C0F;&#x5077;&#x7684;&#x6545;&#x4E8B;Ten soldiers were setting up tents in the forest preparing for the night. Later, two thieves arrived and attempted to rob them of their rations, but were caught. The soldiers told them, &quot;We would kill you, but we&apos;re in a good mood today. We&apos;ll release you if you can make us all laugh.&quot; The thieves reluctantly agreed. One begins to tell a humorous story. After the story, nine of the soldiers are laughing hysterically. However, one is merely looking at the thief with a blank stare. Consequently, one soldier told the thief &quot;Sorry, not all of us laughed,&quot; and killed him. The other thief was nervous after seeing his friend killed, so he told a much less entertaining story. No soldiers were laughing except for the one who didn&apos;t laugh previously, so they killed the second thief as well. After killing the thieves, the soldiers asked their friend, &quot;Why did you laugh during the second thief&apos;s story but not during the first&apos;s? It was much funnier after all.&quot; He responded, &quot;When the second thief was speaking, I finally understood the first thief&apos;s story, and it was damn funny.&quot; &#x5F15;&#x7528;Zootopia&#xFF08;&#x75AF;&#x72C2;&#x52A8;&#x7269;&#x57CE;&#xFF09;&#x7684;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF0C;so hilarious!&#xFF1A;","text":"1. &#x5341;&#x4E2A;&#x5927;&#x5175;&#x4E0E;&#x4E24;&#x4E2A;&#x5C0F;&#x5077;&#x7684;&#x6545;&#x4E8B;Ten soldiers were setting up tents in the forest preparing for the night. Later, two thieves arrived and attempted to rob them of their rations, but were caught. The soldiers told them, &quot;We would kill you, but we&apos;re in a good mood today. We&apos;ll release you if you can make us all laugh.&quot; The thieves reluctantly agreed. One begins to tell a humorous story. After the story, nine of the soldiers are laughing hysterically. However, one is merely looking at the thief with a blank stare. Consequently, one soldier told the thief &quot;Sorry, not all of us laughed,&quot; and killed him. The other thief was nervous after seeing his friend killed, so he told a much less entertaining story. No soldiers were laughing except for the one who didn&apos;t laugh previously, so they killed the second thief as well. After killing the thieves, the soldiers asked their friend, &quot;Why did you laugh during the second thief&apos;s story but not during the first&apos;s? It was much funnier after all.&quot; He responded, &quot;When the second thief was speaking, I finally understood the first thief&apos;s story, and it was damn funny.&quot; &#x5F15;&#x7528;Zootopia&#xFF08;&#x75AF;&#x72C2;&#x52A8;&#x7269;&#x57CE;&#xFF09;&#x7684;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF0C;so hilarious!&#xFF1A; 2. &#x72EE;&#x5B50;&#x548C;&#x68EE;&#x6797;&#x52A8;&#x7269;&#x7684;&#x6545;&#x4E8B;&#xFF08;&#x7ED9;&#x4E4C;&#x9F9F;&#x8DEA;&#x4E86;&#xFF09;One day a lion wakes up in a bad mood and summons the other animals in the jungle. &quot;I want each of you to tell a joke, but I warn you that if anyone of you fails to laugh, I&apos;ll kill the one who told it. Let&apos;s see, monkey, you will be first.&quot; Shaking with fear the monkey begins, &quot;Two men are in the street and...&quot; When he finishes, everyone bursts out laughing save the tortoise. &quot;The tortoise didn&apos;t laugh!&quot; roars the lion, pouncing on the monkey and ripping him to pieces. Then he orders, &quot;Elephant, you&apos;re next.&quot; Cursing through clenched teeth, the elephant begins, &quot;A drunk walks into a bar and...&quot; When he finishes, all the animals split their sides laughing except the tortoise, who remains impassive. &quot;The tortoise didn&apos;t think it was funny!&quot; exclaimed the lion who, seeing that the furious elephant is about to step on the tortoise, kills the elephant with his claws. By now, everyone wants to murder the tortoise, but nobody dares move. &quot;Now it&apos;s your turn, tiger,&quot; orders the lion. The scared tiger begins, &quot;They say that Little Red Riding Hood...&quot; At that moment, the tortoise falls over laughing. &quot;What&apos;s with you?&quot; bellows the lion. &quot;Tiger hasn&apos;t finished yet...&quot; To which the tortoise replies, &quot;The monkey&apos;s joke is hilarious!&quot; 3. &#x738B;&#x540E;&#x8DDF;&#x4E09;&#x4E2A;&#x72AF;&#x4EBA;&#x7684;&#x6545;&#x4E8B;&#xFF08;the queen will get watermelon shoved up the third prisoner&#x2019;s ass? hahaha!&#xFF09;Three prisoners on death row are summoned by the queen for a chance to be free. The queen tells the prisoners they have one day to go into the jungle and bring her a fruit. If she likes it, they are free to go. However, if she doesn&apos;t like it, the fruit of their will be shoved up their ass, and then killed they will be back on death row. The first one comes back with grapes. The queen does not like the grapes and while the grapes were being shoved up his ass, the prisoner was crying. The second prisoner returns with an apple. Again, the queen does not like the apple and the apple gets shoved up the second prisoner&apos;s ass. However, the first prisoner noticed that he was laughing while the apple was being inserted. When asked why he was crying, the second prisoner said &quot;I saw the third prisoner coming back with a watermelon.&quot;","categories":[],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://xpleeandroid.github.io/tags/娱乐/"}]},{"title":"PHP学习笔记","slug":"Learn-PHP","date":"2016-07-07T03:33:29.000Z","updated":"2016-07-08T09:51:53.028Z","comments":true,"path":"2016/07/07/Learn-PHP/","link":"","permalink":"http://xpleeandroid.github.io/2016/07/07/Learn-PHP/","excerpt":"","text":"php&#x6587;&#x4EF6;&#x64CD;&#x4F5C;&#x7684;&#x6A21;&#x5F0F; r &#x53EA;&#x8BFB;&#x6743;&#x9650;&#x6253;&#x5F00;&#x6587;&#x4EF6; w &#x53EA;&#x5199;&#x6743;&#x9650;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#xFF0C;&#x64E6;&#x9664;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x65B0;&#x5EFA;&#x6587;&#x4EF6; a &#x53EA;&#x5199;&#x6743;&#x9650;&#x6253;&#x5F00;&#x6587;&#x4EF6; x &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x53EA;&#x5199;&#x6743;&#x9650;&#x7684;&#x6587;&#x4EF6; r+ &#x6253;&#x5F00;&#x8BFB;/&#x5199;&#x6743;&#x9650;&#x6587;&#x4EF6; w+ &#x6253;&#x5F00;&#x8BFB;/&#x5199;&#x6743;&#x9650;&#x7684;&#x6587;&#x4EF6;&#xFF0C; &#x64E6;&#x9664;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x65B0;&#x5EFA;&#x6587;&#x4EF6; a+ &#x6253;&#x5F00;&#x8BFB;/&#x5199;&#x6743;&#x9650;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;&#xFF1B; x+ &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x8BFB;/&#x5199;&#x6743;&#x9650;&#x7684;&#x6587;&#x4EF6; &#x5C06;&#x8868;&#x5355;&#x63D0;&#x4EA4;&#x5230;&#x672C;&#x8EAB;&#x9875;&#x9762;&#x53EA;&#x9700;&#x5C06;form&#x7684;action &#x8BBE;&#x7F6E;&#x4E3A;&lt;?php echo $_SERVER[&apos;PHP_SELF&apos;];?&gt;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x8DE8;&#x7AD9;&#x70B9;&#x653B;&#x51FB;(XSS)&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x9700;&#x8981;&#x4F7F;&#x7528;htmlspecialchars()&#x907F;&#x514D;$_SERVER[&#x201C;PHP_SELF&#x201D;] &#x88AB;&#x5229;&#x7528;&#x3002;&#x5982;&#x4E0B;&#xFF1A; &lt;form method=&quot;post&quot; action=&quot;&lt;?php echo htmlspecialchars($_SERVER[&quot;PHP_SELF&quot;]);?&gt;&quot;&gt; &#x6B63;&#x5219;&#x5339;&#x914D;&#x89C4;&#x5219; [abc] &#x5355;&#x72EC;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#xFF1A;a,b&#x6216;c [^abc] &#x4EFB;&#x610F;&#x7684;&#x5355;&#x72EC;&#x5B57;&#x7B26;&#x4E32;&#x5355;&#x4E0D;&#x662F;a,b,&#x6216;c [a-z] a-z&#x4EFB;&#x610F;&#x7684;&#x5355;&#x72EC;&#x5B57;&#x7B26;&#x4E32; [a-zA-Z] a-z &#x6216;A-Z&#x4E2D;&#x4EFB;&#x610F;&#x7684;&#x5355;&#x72EC;&#x5B57;&#x7B26;&#x4E32; ^ &#x5339;&#x914D;&#x6574;&#x884C;&#x5F00;&#x5934; (&#x6BD4;&#x5982; ^\\d+&#x5339;&#x914D;&#x7684;&#x662F;&#x4EFB;&#x610F;&#x7684;&#x6570;&#x5B57;&#x5F00;&#x5934;&#x7684;&#x5B57;&#x7B26;&#x4E32;) $ &#x5339;&#x914D;&#x6574;&#x884C;&#x7ED3;&#x5C3E; (&#x6BD4;&#x5982;\\d+$&#x5339;&#x914D;&#x4EFB;&#x610F;&#x4EE5;&#x6570;&#x5B57;&#x7ED3;&#x5C3E;&#x7684;&#x5B57;&#x7B26;&#x4E32;) \\A &#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32;&#x8F93;&#x5165;&#x7684;&#x5F00;&#x5934; \\z &#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32;&#x8F93;&#x5165;&#x7684;&#x7ED3;&#x5C3E; . &#x4EFB;&#x610F;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x4E32; \\s &#x4EFB;&#x610F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32; \\S &#x4EFB;&#x610F;&#x975E;&#x7A7A;&#x5B57;&#x7B26;&#x4E32; \\d &#x4EFB;&#x610F;&#x6570;&#x5B57; \\D &#x4EFB;&#x610F;&#x975E;&#x6570;&#x5B57; \\w &#x4EFB;&#x610F;&#x4EFB;&#x4F55;&#x5355;&#x5B57;&#x7B26;&#xFF08;&#x6570;&#x5B57;&#xFF0C;&#x5B57;&#x6BCD;&#xFF0C;&#x4E0B;&#x6ED1;&#x7EBF;&#xFF09;&#x3001; \\W &#x4EFB;&#x610F;&#x975E;&#x5B57;&#x7B26; \\B &#x5339;&#x914D;&#x4EFB;&#x610F;&#x94FE;&#x63A5;&#x5B57;&#x7B26;&#x4E32; &#xFF08;&#x2026;&#xFF09; &#x6355;&#x83B7;&#x5C01;&#x95ED;&#x7684;&#x5185;&#x5BB9; (a|b) &#x5339;&#x914D;a&#x6216;b a? 0&#x6216;1&#x4E2A;a a* 0&#x6216;&#x591A;&#x4E2A;a a+ 1&#x6216;&#x591A;&#x4E2A;a a{3} &#x4E09;&#x4E2A;a a{3,} 3&#x4E2A;&#x6216;&#x66F4;&#x591A;a a{3,6} 3&#x5230;6&#x4E2A;a i &#x5FFD;&#x7565;&#x5927;&#x5C0F;&#x5199; m &#x5339;&#x914D;&#x591A;&#x884C; x &#x5FFD;&#x7565;&#x7A7A;&#x767D;","categories":[],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xpleeandroid.github.io/tags/PHP/"}]},{"title":"java8教程-泛型（Generics）","slug":"java8-Generics","date":"2016-06-28T06:04:35.000Z","updated":"2016-07-20T09:34:13.862Z","comments":true,"path":"2016/06/28/java8-Generics/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/28/java8-Generics/","excerpt":"&#x539F;&#x6587;&#x94FE;&#x63A5; [https://docs.oracle.com/javase/tutorial/java/generics/index.html) &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; &#x6CDB;&#x578B;&#xFF08;&#x5DF2;&#x66F4;&#x65B0;&#xFF09; &#x5728;&#x4EFB;&#x4F55;&#x7E41;&#x7410;&#x7684;&#xFF08;nontrivial&#xFF09;&#x8F6F;&#x4EF6;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;bug&#x662F;&#x5BB6;&#x5E38;&#x4FBF;&#x996D;&#x3002;&#x7EC6;&#x5FC3;&#x7684;&#x89C4;&#x5212;&#xFF0C;&#x7F16;&#x7A0B;&#x548C;&#x6D4B;&#x8BD5;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x51CF;&#x5C11;bug&#x7684;&#x666E;&#x904D;&#x6027;&#xFF08;pervasiveness&#xFF09;,&#x4F46;&#x662F;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#xFF0C;&#x65E0;&#x8BBA;&#x5728;&#x54EA;&#x91CC;&#xFF0C;bug&#x603B;&#x4F1A;&#x4F3A;&#x673A;&#x6084;&#x6084;&#x6E9C;&#x8FDB;&#xFF08;creep&#xFF09;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x65B0;&#x7684;&#x7279;&#x6027;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x88AB;&#x5F15;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x57FA;&#x6570;&#x4F1A;&#x4E0D;&#x65AD;&#x53D8;&#x5927;&#x548C;&#x590D;&#x6742;&#x3002; &#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x4E9B;bug&#x76F8;&#x6BD4;&#x5176;&#x5B83;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x68C0;&#x6D4B;&#x3002;&#x7F16;&#x8BD1;&#x65F6;bug&#x53EF;&#x4EE5;&#x5728;&#x65E9;&#x671F;&#x88AB;&#x68C0;&#x6D4B;&#x5230;&#xFF1B;&#x4F60;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x67E5;&#x660E;&#x662F;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x5E76;&#x4E14;&#x89E3;&#x51B3;&#xFF0C;&#x5C31;&#x5728;&#x90A3;&#x65F6;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;bug&#x4F1A;&#x66F4;&#x52A0;&#x672A;&#x9884;&#x77E5;,&#x4ED6;&#x4EEC;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x5C55;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53D1;&#x751F;&#xFF0C;&#x53EF;&#x80FD;&#x6839;&#x672C;&#x4E0D;&#x5728;&#x7A0B;&#x5E8F;&#x771F;&#x6B63;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x7684;&#x70B9;&#x4E0A;&#x3002; &#x6CDB;&#x578B;&#x901A;&#x8FC7;&#x66F4;&#x591A;&#x7684;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x68C0;&#x6D4B;bug&#x4E3A;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x589E;&#x52A0;&#x4E86;&#x7A33;&#x5B9A;&#x6027;&#x3002;","text":"&#x539F;&#x6587;&#x94FE;&#x63A5; [https://docs.oracle.com/javase/tutorial/java/generics/index.html) &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; &#x6CDB;&#x578B;&#xFF08;&#x5DF2;&#x66F4;&#x65B0;&#xFF09; &#x5728;&#x4EFB;&#x4F55;&#x7E41;&#x7410;&#x7684;&#xFF08;nontrivial&#xFF09;&#x8F6F;&#x4EF6;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;bug&#x662F;&#x5BB6;&#x5E38;&#x4FBF;&#x996D;&#x3002;&#x7EC6;&#x5FC3;&#x7684;&#x89C4;&#x5212;&#xFF0C;&#x7F16;&#x7A0B;&#x548C;&#x6D4B;&#x8BD5;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x51CF;&#x5C11;bug&#x7684;&#x666E;&#x904D;&#x6027;&#xFF08;pervasiveness&#xFF09;,&#x4F46;&#x662F;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#xFF0C;&#x65E0;&#x8BBA;&#x5728;&#x54EA;&#x91CC;&#xFF0C;bug&#x603B;&#x4F1A;&#x4F3A;&#x673A;&#x6084;&#x6084;&#x6E9C;&#x8FDB;&#xFF08;creep&#xFF09;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x65B0;&#x7684;&#x7279;&#x6027;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x88AB;&#x5F15;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x57FA;&#x6570;&#x4F1A;&#x4E0D;&#x65AD;&#x53D8;&#x5927;&#x548C;&#x590D;&#x6742;&#x3002; &#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x4E9B;bug&#x76F8;&#x6BD4;&#x5176;&#x5B83;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x68C0;&#x6D4B;&#x3002;&#x7F16;&#x8BD1;&#x65F6;bug&#x53EF;&#x4EE5;&#x5728;&#x65E9;&#x671F;&#x88AB;&#x68C0;&#x6D4B;&#x5230;&#xFF1B;&#x4F60;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x67E5;&#x660E;&#x662F;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x5E76;&#x4E14;&#x89E3;&#x51B3;&#xFF0C;&#x5C31;&#x5728;&#x90A3;&#x65F6;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;bug&#x4F1A;&#x66F4;&#x52A0;&#x672A;&#x9884;&#x77E5;,&#x4ED6;&#x4EEC;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x5C55;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53D1;&#x751F;&#xFF0C;&#x53EF;&#x80FD;&#x6839;&#x672C;&#x4E0D;&#x5728;&#x7A0B;&#x5E8F;&#x771F;&#x6B63;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x7684;&#x70B9;&#x4E0A;&#x3002; &#x6CDB;&#x578B;&#x901A;&#x8FC7;&#x66F4;&#x591A;&#x7684;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x68C0;&#x6D4B;bug&#x4E3A;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x589E;&#x52A0;&#x4E86;&#x7A33;&#x5B9A;&#x6027;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;&#x6CDB;&#x578B;&#x7B80;&#x8A00;&#x4E4B;&#xFF0C;&#x6CDB;&#x578B;&#x80FD;&#x591F;&#x4F7F;&#x7C7B;&#x578B;&#xFF08;&#x7C7B;&#x548C;&#x63A5;&#x53E3;&#xFF09;&#x5728;&#x5B9A;&#x4E49;&#x7C7B;&#xFF0C;&#x63A5;&#x53E3;&#x548C;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x53C2;&#x6570;&#x5316;&#x3002;&#x975E;&#x5E38;&#x50CF;&#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x65F6;&#x7528;&#x5230;&#x7684;&#x5F62;&#x5F0F;&#x53C2;&#x6570;&#xFF08;formal parameters&#xFF09;,&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x7684;&#x8F93;&#x5165;&#x6765;&#x590D;&#x7528;&#x540C;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4E0D;&#x540C;&#x70B9;&#x662F;&#xFF0C;&#x5F62;&#x5F0F;&#x53C2;&#x6570;&#x8F93;&#x5165;&#x7684;&#x662F;&#x503C;&#xFF0C;&#x800C;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x8F93;&#x5165;&#x7684;&#x662F;&#x7C7B;&#x578B;&#x3002; &#x4F7F;&#x7528;&#x6CDB;&#x578B;&#x6BD4;&#x975E;&#x6CDB;&#x578B;&#x6709;&#x5F88;&#x591A;&#x597D;&#x5904;&#xFF1A; &#x7F16;&#x8BD1;&#x65F6;&#x66F4;&#x5F3A;&#x5927;&#x7684;&#x7C7B;&#x578B;&#x68C0;&#x6D4B; Java&#x7F16;&#x8BD1;&#x5668;&#x5BF9;&#x6CDB;&#x578B;&#x5E94;&#x7528;&#x4E86;&#x5F3A;&#x5927;&#x7684;&#x7C7B;&#x578B;&#x68C0;&#x6D4B;&#xFF0C;&#x5982;&#x679C;&#x4EE3;&#x7801;&#x8FDD;&#x53CD;&#x4E86;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#x3002;&#x4FEE;&#x590D;&#x7F16;&#x8BD1;&#x65F6;&#x9519;&#x8BEF;&#x6BD4;&#x4FEE;&#x590D;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x66F4;&#x52A0;&#x5BB9;&#x6613;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x5F88;&#x96BE;&#x67E5;&#x627E;&#x5230;&#x3002; &#x6D88;&#x9664;&#x7C7B;&#x578B;&#x8F6C;&#x6362;(Elimination of casts) &#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x7247;&#x6BB5;&#x6CA1;&#x6709;&#x6CDB;&#x578B;&#x9700;&#x8981;&#x8F6C;&#x578B;&#xFF1A; List list = new ArrayList(); list.add(&#x201C;hello&#x201D;); String s = (String) list.get(0);&#x5F53;&#x6211;&#x4EEC;&#x91CD;&#x65B0;&#x7528;&#x6CDB;&#x578B;&#x7F16;&#x5199;&#xFF0C;&#x4EE3;&#x7801;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E86;&#xFF1A; List list = new ArrayList(); list.add(&#x201C;hello&#x201D;); String s = list.get(0); // no cast &#x4F7F;&#x5F00;&#x53D1;&#x8005;&#x5B9E;&#x73B0;&#x6CDB;&#x578B;&#x7B97;&#x6CD5; &#x901A;&#x8FC7;&#x6CDB;&#x578B;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x6CDB;&#x578B;&#x7B97;&#x6CD5;&#xFF0C;&#x5E94;&#x7528;&#x5230;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x5E76;&#x4E14;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#xFF0C;&#x6613;&#x8BFB;&#x3002; &#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x662F;&#x6CDB;&#x578B;&#x7C7B;&#x6216;&#x8005;&#x63A5;&#x53E3;&#x88AB;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x5316;&#x3002;&#x4E0B;&#x9762;&#x7684;Box&#x7C7B;&#x5C06;&#x88AB;&#x66F4;&#x6539;&#x6F14;&#x793A;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#x3002; &#x7B80;&#x5355;&#x7684; Box &#x7C7B;&#x5217;&#x4E3E;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x975E;&#x6CDB;&#x578B; Box&#x64CD;&#x4F5C;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;object&#x3002;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;set&#xFF0C;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;obejct&#x5230;box&#xFF0C;get,&#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#xFF1A; public class Box { private Object object; public void set(Object object) { this.object = object; } public Object get() { return object; } } &#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x65B9;&#x6CD5;&#x63A5;&#x6536;&#x6216;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4EFB;&#x610F;&#x4F20;&#x5165;&#xFF0C;&#x53EA;&#x8981;&#x4F20;&#x5165;&#x7684;&#x4E0D;&#x662F;&#x539F;&#x59CB;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x8FA8;&#x522B;clas&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x7684;&#x3002;&#x4E00;&#x8FB9;&#x53EF;&#x80FD;&#x66FF;&#x6362;&#x4E00;&#x4E2A; Integer&#x5230;box&#xFF0C;&#x53E6;&#x4E00;&#x8FB9;&#x83B7;&#x53D6;&#x7684;&#x4E0D;&#x662F;Integer&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x53EF;&#x80FD;&#x4F20;&#x5165;&#x4E00;&#x4E2A;String&#x7C7B;&#x578B;&#xFF0C;&#x7ED3;&#x679C;&#x4F1A;&#x5BFC;&#x81F4;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x3002; &#x6CDB;&#x578B;&#x7248;&#x672C;&#x7684;Box&#x6CDB;&#x578B;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; class name&lt;T1, T2, ..., Tn&gt; { /* ... */ } &#x7C7B;&#x578B;&#x53C2;&#x6570;&#x90E8;&#x5206;&#x88AB;&#x4E00;&#x5BF9;&#x5C16;&#x62EC;&#x53F7;&#xFF08;&lt;&gt;&#xFF09;&#x5212;&#x5206;&#xFF0C;&#x7D27;&#x8DDF;&#x7C7B;&#x540D;&#xFF0C;&#x5B83;&#x6307;&#x5B9A;&#x4E86;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF08;&#x4E5F;&#x53EB;&#x4F5C;&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#xFF09;T1&#xFF0C; T2&#xFF0C; &#x2026;.,&#x548C;Tn. &#x628A;&#x539F;Box&#x7C7B;&#x66F4;&#x65B0;&#x4E3A;&#x6CDB;&#x578B;&#x7C7B;&#xFF0C;&#x4F60;&#x8981;&#x901A;&#x8FC7;&#x628A;&#x201C;public class Box&#x201D;&#x6539;&#x53D8;&#x4E3A;&#x201C;public class Box&#x201D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x58F0;&#x660E;&#x3002;&#x8FD9;&#x4F1A;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x53D8;&#x91CF;, T,&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x7C7B;&#x4E2D;&#x4EFB;&#x610F;&#x5730;&#x65B9;&#x4F7F;&#x7528;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x6539;&#x53D8;&#xFF0C;Box&#x7C7B;&#x5C31;&#x53D8;&#x4E3A;&#xFF1A; /** * Generic version of the Box class. * @param &lt;T&gt; the type of the value being boxed */ public class Box&lt;T&gt; { // T stands for &quot;Type&quot; private T t; public void set(T t) { this.t = t; } public T get() { return t; } } &#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6240;&#x6709;Object&#x51FA;&#x73B0;&#x7684;&#x5730;&#x65B9;&#x90FD;&#x88AB;&#x66FF;&#x6362;&#x4E3A;T&#x4E86;&#x3002;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4E3A;&#x4EFB;&#x610F;&#x975E;&#x539F;&#x59CB;&#x7C7B;&#x578B;&#x7684;&#x7C7B;&#x578B;&#xFF1A;&#x4EFB;&#x610F;&#x7684;&#x7C7B;&#xFF0C;&#x4EFB;&#x610F;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4EFB;&#x610F;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x751A;&#x81F3;&#x5176;&#x4ED6;&#x7684;&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#x3002;&#x540C;&#x6837;&#x7684;&#x6280;&#x672F;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x5230;&#x521B;&#x5EFA;&#x6CDB;&#x578B;&#x63A5;&#x53E3;&#x4E0A;&#x3002; &#x7C7B;&#x578B;&#x53C2;&#x6570;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF08;Naming Conventions&#xFF09;&#x901A;&#x8FC7;&#x89C4;&#x5219;&#xFF0C;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x662F;&#x5355;&#x72EC;&#x7684;&#xFF0C;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x3002;&#x8FD9;&#x4E2A;&#x8868;&#x793A;&#x9C9C;&#x660E;&#x533A;&#x522B;&#x4E86;&#x4F60;&#x5DF2;&#x77E5;&#x7684;&#x53D8;&#x91CF;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF0C;&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x7406;&#x7531;&#x662F;&#xFF1A;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x89C4;&#x5219;&#xFF0C;&#x4F60;&#x5C06;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#x548C;&#x539F;&#x751F;&#x7C7B;&#x6216;&#x63A5;&#x53E3;&#x540D;&#x7684;&#x533A;&#x522B;&#x3002; &#x6700;&#x666E;&#x904D;&#x4F7F;&#x7528;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x662F;&#xFF1A; E -Element&#xFF08;Java Collections&#x6846;&#x67B6;&#x5927;&#x91CF;&#x4F7F;&#x7528;&#xFF09; K -Key N -Number T -Type V -Value S,U,V &#x7B49; -&#x7B2C;&#x4E8C;&#xFF0C;&#x7B2C;&#x4E09;&#xFF0C;&#x7B2C;&#x56DB;&#x4E2A;&#x7C7B;&#x578B; &#x4F60;&#x53EF;&#x4EE5;&#x5728;JAVA SE API &#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x540D;&#x5B57;&#x7684;&#x4F7F;&#x7528;&#x3002; &#x8C03;&#x7528;&#x548C;&#x5B9E;&#x4F8B;&#x5316;&#x4E00;&#x4E2A;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x8981;&#x5728;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5F15;&#x7528;&#x6CDB;&#x578B;&#x7C7B; Box&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x6267;&#x884C; &#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x8C03;&#x7528;&#xFF0C;&#x628A;T&#x66FF;&#x6362;&#x6210;&#x5177;&#x4F53;&#x7684;&#x503C;&#xFF0C;&#x6BD4;&#x5982;Integer&#xFF1A; Box&lt;Integer&gt; integerBox; &#x4F60;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x8C03;&#x7528;&#x8DDF;&#x539F;&#x751F;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5927;&#x81F4;&#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x662F;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5230;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x662F;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x8695;&#x98DF;&#x2013;&#x8FD9;&#x4E2A;&#x60C5;&#x51B5;&#x4E0B;&#x7684;Integer&#x2013;&#x7ED9;Box&#x7C7B;&#x672C;&#x8EAB;&#x3002; Type Parameter&#x548C;Type Argument&#x672F;&#x8BED;&#xFF08;Terminology&#xFF09;&#xFF1A;&#x5F88;&#x591A;&#x5F00;&#x53D1;&#x8005;&#x4EA4;&#x6362;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x4E24;&#x4E2A;&#x672F;&#x8BED;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x672F;&#x8BED;&#x5E76;&#x4E0D;&#x540C;&#x3002;&#x6572;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;type argument &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5316;&#x7C7B;&#x578B;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;Foo&lt; T&gt;&#x4E2D;&#x7684;T&#x662F;type parameter&#xFF0C;Foo&lt; String&gt; f&#x4E2D;&#x7684;String&#x662F;&#x4E00;&#x4E2A;type argument&#x3002; &#x5C31;&#x60F3;&#x5176;&#x4ED6;&#x7684;&#x53D8;&#x91CF;&#x5B9A;&#x4E49;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E0D;&#x4F1A;&#x771F;&#x6B63;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684; Box&#x5BF9;&#x8C61;&#x3002;&#x5B83;&#x53EA;&#x662F;&#x58F0;&#x660E;&#xFF0C;integerBox&#x5C06;&#x6301;&#x6709;&#x4E00;&#x4E2A;&#x201C;Box of Integer&#x201D;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x7528;&#x4EE5;&#x8BFB;&#x53D6;Box.&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x7684;&#x8C03;&#x7528;&#x901A;&#x5E38;&#x79F0;&#x4E3A;&#x53C2;&#x6570;&#x5316;&#x7C7B;&#x578B;&#x3002; &#x4E3A;&#x4E86;&#x5B9E;&#x4F8B;&#x5316;&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x7528;new &#x5173;&#x952E;&#x5B57;&#xFF0C;&#x628A;&#x653E;&#x5728;&#x7C7B;&#x540D;&#x548C;&#x62EC;&#x53F7;&#x4E4B;&#x95F4;&#x3002; Box&lt;Integer&gt; integerBox = new Box&lt;Integer&gt;(); The Diamond&#x5728;Java SE 7&#x53CA;&#x4EE5;&#x540E;&#x7248;&#x672C;&#xFF0C;&#x53EF;&#x4EE5;&#x7701;&#x53BB;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x8C03;&#x7528;&#x6CDB;&#x578B;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF08;&lt;&gt;&#xFF09;,&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E0A;&#x4E0B;&#x6587;&#x51B3;&#x5B9A;&#xFF0C;&#x6216;&#x63A8;&#x6D4B;type arguments&#xFF0C;&#x8FD9;&#x4E2A;&#x5C16;&#x62EC;&#x53F7;&#x975E;&#x6B63;&#x5F0F;&#x5F97;&#x53EB;&#x4F5C;diamond(&#x94BB;&#x77F3;&#xFF1F;&#x8FD9;&#x4E48;&#x5947;&#x8469;)&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x521B;&#x5EFA;Box&lt; Integer&gt;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF1A; Box&lt;Integer&gt; integerBox = new Box&lt;&gt;(); &#x8981;&#x67E5;&#x770B;&#x66F4;&#x591A;&#x5173;&#x4E8E;diamond &#x7B26;&#x53F7;&#x548C;&#x7C7B;&#x578B;&#x63A8;&#x65AD;&#xFF08;inference&#xFF09;,&#x8BF7;&#x770B;&#x7C7B;&#x578B;&#x63A8;&#x65AD;&#x3002; &#x591A;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x6B63;&#x5982;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#xFF0C;&#x6CDB;&#x578B;&#x7C7B;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x3002;&#x6BD4;&#x5982;&#x6CDB;&#x578B; OrderedPair &#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;&#x6CDB;&#x578B;&#x63A5;&#x53E3; Pair&#xFF1A; public interface Pair&lt;K, V&gt; { public K getKey(); public V getValue(); } public class OrderedPair&lt;K, V&gt; implements Pair&lt;K, V&gt; { private K key; private V value; public OrderedPair(K key, V value) { this.key = key; this.value = value; } public K getKey() { return key; } public V getValue() { return value; } } &#x4E0B;&#x9762;&#x7684;&#x8BED;&#x53E5;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;OrderedPair&#x7684;&#x5B9E;&#x4F8B;&#xFF1A; Pair&lt;String, Integer&gt; p1 = new OrderedPair&lt;String, Integer&gt;(&quot;Even&quot;, 8); Pair&lt;String, String&gt; p2 = new OrderedPair&lt;String, String&gt;(&quot;hello&quot;, &quot;world&quot;); new OrderedPair&#x628A;K&#x5B9E;&#x4F8B;&#x5316;&#x4E3A;String&#xFF0C;V&#x5B9E;&#x4F8B;&#x5316;&#x4E3A;Integer&#x3002;&#x56E0;&#x6B64;OrderedPair&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x5206;&#x522B;(respectively)&#x662F;String&#x548C;Integer&#x3002;&#x56E0;&#x4E3A;&#x81EA;&#x52A8;&#x88C5;&#x7BB1;&#xFF0C;&#x4F20;&#x5165;String&#x548C;int&#x5230;&#x7C7B;&#x662F;&#x6709;&#x6548;&#x7684;&#x3002; &#x53C2;&#x6570;&#x5316;&#x7C7B;&#x578B;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5316;&#x7684;&#x7C7B;&#x578B;&#xFF08;ie List&lt; String&gt;&#xFF09;&#x66FF;&#x6362;&#xFF08;substitute&#xFF09;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF08;K &#xFF0C;V&#xFF09;,&#x4F8B;&#x5982;&#x7528;OrderedPair&lt; K,V&gt;: OrderedPair&lt;String, Box&lt;Integer&gt;&gt; p = new OrderedPair&lt;&gt;(&quot;primes&quot;, new Box&lt;Integer&gt;(...)); &#x539F;&#x7C7B;&#x578B;&#xFF08;Raw Types&#xFF09;&#x539F;&#x7C7B;&#x578B;&#x662F;&#x6307;&#x6CDB;&#x578B;&#x7C7B;&#x6216;&#x6CDB;&#x578B;&#x63A5;&#x53E3;&#x7684;&#x540D;&#x5B57;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x7ED9;&#x51FA;&#x6CDB;&#x578B;&#x7C7B;Box&#xFF1A; public class Box(T){ public void set(T t){ /* ...... */ } } &#x4F60;&#x53EF;&#x4EE5;&#x4E3A;&#x5F62;&#x53C2;T&#x8D4B;&#x503C;&#x4E00;&#x4E2A;&#x771F;&#x5B9E;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5316;&#x7C7B;&#x578B;&#x7684; Box&#xFF08;T&#xFF09;&#xFF1A; Box(Ingeter) intBox=new Box&lt;&gt;(); &#x5982;&#x679C;&#x771F;&#x5B9E;&#x7684;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x88AB;&#x7701;&#x7565;&#x6389;&#x4E86;&#xFF0C;&#x4F60;&#x5C31;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x539F;&#x7C7B;&#x578B;&#x7684;Box: Box rawBox =new Box(); &#x56E0;&#x6B64;&#xFF0C;Box&#x662F;Box&#x7684;&#x539F;&#x7C7B;&#x578B;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x975E;&#x6CDB;&#x578B;&#x7C7B;&#x6216;&#x975E;&#x6CDB;&#x578B;&#x63A5;&#x53E3;&#x6CA1;&#x6709;&#x539F;&#x7C7B;&#x578B;&#x3002;&#x539F;&#x7C7B;&#x578B;&#x51FA;&#x73B0;&#x5728;&#x9057;&#x8D60;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x91CF;&#x7684;API&#x7C7B;&#xFF08;&#x6BD4;&#x5982;Collections&#x7C7B;&#xFF09;&#x5728;JDK5&#x4E4B;&#x524D;&#x4E0D;&#x662F;&#x6CDB;&#x578B;&#x7C7B;&#x3002;&#x5F53;&#x4F7F;&#x7528;&#x539F;&#x7C7B;&#x578B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x672C;&#x8D28;&#x4E0A;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x6CDB;&#x578B;&#x4E4B;&#x524D;&#x7684;&#x8868;&#x73B0;&#x2014;Box -&gt;Object.&#x4E3A;&#x4E86;&#x5411;&#x540E;&#x517C;&#x5BB9;&#xFF0C;&#x8D4B;&#x503C;&#x53C2;&#x6570;&#x5316;&#x7C7B;&#x578B;&#x7ED9;&#x4ED6;&#x7684;&#x539F;&#x7C7B;&#x578B;&#x662F;&#x5141;&#x8BB8;&#x7684;&#xFF1A; Box&lt;String&gt; stringBox=new Box&lt;&gt;(); Box rawBox=stringBox; //OK &#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x8D4B;&#x503C;&#x4E00;&#x4E2A;&#x539F;&#x7C7B;&#x578B;&#x7ED9;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5316;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x4F60;&#x5C06;&#x5F97;&#x5230;&#x8B66;&#x544A;&#xFF1A; Box rawBox=new Box(); //rawBox&#x662F;Box&lt;T&gt;()&#x7684;&#x539F;&#x7C7B;&#x578B; Box&lt;Integer&gt; intBox=rawBox; //warning:unchecked conversion &#x5F53;&#x4F60;&#x7528;&#x539F;&#x7C7B;&#x578B;&#x8C03;&#x7528;&#x5173;&#x8054;&#x7684;&#x53CD;&#x7701;&#x7C7B;&#x578B;&#x7684;&#x6CDB;&#x578B;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x4F60;&#x4E5F;&#x4F1A;&#x5F97;&#x5230;&#x8B66;&#x544A;&#xFF1A; Box&lt;String&gt; stringBox=new Box&lt;&gt;(); Box rawBox=stringBox; rawBox.set(8); //waring: unchecked invocation to set(T) &#x8B66;&#x544A;&#x663E;&#x793A;&#x539F;&#x7C7B;&#x578B;&#x7ED5;&#x8FC7;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x68C0;&#x67E5;&#xFF0C;&#x5EF6;&#x8FDF;&#x6355;&#x83B7;&#x4E0D;&#x5B89;&#x5168;&#x4EE3;&#x7801;&#x5230;&#x8FD0;&#x884C;&#x65F6;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x539F;&#x7C7B;&#x578B;&#x3002;&#x7C7B;&#x578B;&#x64E6;&#x9664;&#x90E8;&#x5206;&#x4F1A;&#x6709;&#x66F4;&#x591A;&#x5173;&#x4E8E;Java&#x7F16;&#x8BD1;&#x5668;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x539F;&#x7C7B;&#x578B;&#x7684;&#x5185;&#x5BB9;&#x3002; Unchecked Error Messages&#x6B63;&#x5982;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#xFF0C;&#x5F53;&#x6DF7;&#x5408;&#x9057;&#x8D60;&#x4EE3;&#x7801;&#x548C;&#x6CDB;&#x578B;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x78B0;&#x5230;&#x8DDF;&#x4E0B;&#x9762;&#x76F8;&#x4F3C;&#x7684;&#x8B66;&#x544A;&#xFF1A; Note: Example.java uses unchecked or unsafe operations. Note: Recompile with -Xlint:unchecked for details. &#x8FD9;&#x53D1;&#x751F;&#x5728;&#x5F53;&#x4F7F;&#x7528;&#x8001;&#x7684;API&#x64CD;&#x4F5C;&#x539F;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F8B;&#x5982;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; public class WarningDemo { Box&lt;Integer&gt; bi; bi=createBox(); } static Box createBox(){ return new Box(); } &#x2018;unchecked&#x2019;&#x6307;&#x7684;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#x6765;&#x6267;&#x884C;&#x6240;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x7C7B;&#x578B;&#x68C0;&#x67E5;&#x4EE5;&#x4FDD;&#x8BC1;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x3002;","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://xpleeandroid.github.io/tags/java/"}]},{"title":"翻译:no more findViewById","slug":"translate-no-more-findviewbyid","date":"2016-06-26T06:40:57.000Z","updated":"2016-06-28T09:49:39.814Z","comments":true,"path":"2016/06/26/translate-no-more-findviewbyid/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/26/translate-no-more-findviewbyid/","excerpt":"&#x539F;&#x6587;&#x94FE;&#x63A5; https://medium.com/google-developers/no-more-findviewbyid-457457644885#.cs0jg2og6 &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; No More findViewById Android Studio&#x5F00;&#x53D1;android&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4E2A;&#x5C0F;&#x7279;&#x70B9;&#x662F;&#x6570;&#x636E;&#x7ED1;&#x5B9A;&#x3002;&#x6211;&#x4F1A;&#x5728;&#x5C06;&#x6765;&#x7684;&#x6587;&#x7AE0;&#x4E2D;&#x8BB2;&#x89E3;&#x5B83;&#x7684;&#x5176;&#x4ED6;&#x4E00;&#x4E9B;&#x4F18;&#x96C5;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x6700;&#x57FA;&#x7840;&#x7684;&#x662F;&#x600E;&#x6837;&#x6D88;&#x9664;findViewById.","text":"&#x539F;&#x6587;&#x94FE;&#x63A5; https://medium.com/google-developers/no-more-findviewbyid-457457644885#.cs0jg2og6 &#x7FFB;&#x8BD1;&#xFF1A; Adamin90 &#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#xFF0C;&#x8C22;&#x8C22;&#xFF01; No More findViewById Android Studio&#x5F00;&#x53D1;android&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4E2A;&#x5C0F;&#x7279;&#x70B9;&#x662F;&#x6570;&#x636E;&#x7ED1;&#x5B9A;&#x3002;&#x6211;&#x4F1A;&#x5728;&#x5C06;&#x6765;&#x7684;&#x6587;&#x7AE0;&#x4E2D;&#x8BB2;&#x89E3;&#x5B83;&#x7684;&#x5176;&#x4ED6;&#x4E00;&#x4E9B;&#x4F18;&#x96C5;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x6700;&#x57FA;&#x7840;&#x7684;&#x662F;&#x600E;&#x6837;&#x6D88;&#x9664;findViewById.1TextView hello = (TextView) findViewById(R.id.hello); &#x867D;&#x7136;&#x73B0;&#x5728;&#x6709;&#x5F88;&#x591A;&#x8BD5;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x8FD9;&#x4E9B;&#x591A;&#x4F59;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x662F;Android Studio 1.5&#x4EE5;&#x53CA;&#x66F4;&#x9AD8;&#x7248;&#x672C;&#x5DF2;&#x7ECF;&#x6709;&#x5B98;&#x65B9;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x5728;Application&#x7684;build.gradle&#x91CC;&#x7684;android&#x5757;&#x5185;&#x586B;&#x5199;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; android { &#x2026; dataBinding.enabled = true } &#x4E0B;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x5728;&#x4F60;&#x7684;layout&#x6587;&#x4EF6;&#x7684;&#x6700;&#x5916;&#x5C42;&#x6DFB;&#x52A0; &#x6807;&#x7B7E;&#xFF0C;&#x4E0D;&#x7BA1;&#x4F60;&#x7528;&#x7684;&#x662F;&#x4EFB;&#x4F55; ViewGroup: &lt;layout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt; &lt;RelativeLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot; android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot; android:paddingTop=&quot;@dimen/activity_vertical_margin&quot; android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot; tools:context=&quot;.MainActivity&quot;&gt; &lt;TextView android:id=&quot;@+id/hello&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;/&gt; &lt;/RelativeLayout&gt; Layout&#x6807;&#x7B7E;&#x544A;&#x8BC9;Android Studio&#x8FD9;&#x4E2A;layout&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C06;&#x8FDB;&#x884C;&#x989D;&#x5916;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x67E5;&#x627E;&#x5230;&#x6240;&#x6709;&#x611F;&#x5174;&#x8DA3;&#x7684;view,&#x5E76;&#x4E14;&#x6807;&#x7B7E;&#x4E3A;&#x4E0B;&#x4E00;&#x6B65;&#x3002;&#x6240;&#x6709;&#x5916;&#x90E8;&#x6CA1;&#x6709;&#x5305;layout&#x6807;&#x7B7E;&#x7684;&#x5E03;&#x5C40;&#x5C06;&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x989D;&#x5916;&#x64CD;&#x4F5C;&#x3002;&#x6240;&#x4EE5;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x65B0;&#x9879;&#x76EE;&#x4E2D;&#x5C11;&#x91CF;&#x4F7F;&#x7528;&#x800C;&#x65E0;&#x9700;&#x6539;&#x53D8;&#x9879;&#x76EE;&#x4E2D;&#x5176;&#x4ED6;&#x7684;&#x90E8;&#x5206;&#x3002; &#x4E0B;&#x9762;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x544A;&#x8BC9;&#x5B83;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x5206;&#x522B;&#x52A0;&#x8F7D;&#x4F60;&#x7684;layout&#x3002;&#x56E0;&#x4E3A;&#x5B83;&#x5411;&#x540E;&#x517C;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x9700;&#x8981;&#x4F9D;&#x8D56;&#x65B0;&#x6846;&#x67B6;&#x7684;&#x6539;&#x53D8;&#x6765;&#x52A0;&#x8F7D;&#x8FD9;&#x4E9B;&#x9884;&#x6267;&#x884C;&#x7684;layout&#x6587;&#x4EF6;&#x3002;&#x56E0;&#x6B64;&#x4F60;&#x53EA;&#x9700;&#x5BF9;&#x7A0B;&#x5E8F;&#x505A;&#x4E00;&#x4E2A;&#x8F7B;&#x5FAE;&#x7684;&#x6539;&#x53D8;&#x3002; &#x4ECE;&#x4E00;&#x4E2A;Activity,&#x4E0D;&#x662F;&#xFF1A; 123 setContentView(R.layout.hello_world);TextView hello = (TextView) findViewById(R.id.hello);hello.setText(&quot;Hello World&quot;); &#x800C;&#x662F;&#x8FD9;&#x6837;&#x52A0;&#x8F7D;&#xFF1A; HelloWorldBinding binding = DataBindingUtil.setContentView(this, R.layout.hello_world); binding.hello.setText(&quot;Hello World&quot;); &#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230; HelloWordBinding&#x8FD9;&#x4E2A;&#x7C7B;&#x81EA;&#x52A8;&#x4E3A;hello_world.xml&#x751F;&#x6210;&#x5E76;&#x4E14;id&#x4E3A;&#x201C;@+id/hello&#x201D;&#x7684;view&#x5206;&#x914D;&#x5230;&#x4E86;&#x4E00;&#x4E2A;hello&#x7684;field&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x3002;&#x6CA1;&#x6709;&#x5F3A;&#x5236;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#xFF0C;&#x6CA1;&#x6709;findViewById. &#x8FD9;&#x6807;&#x5175;&#x8FD9;&#x662F;&#x8BBF;&#x95EE;view&#x7684;&#x673A;&#x5236;&#x4E0D;&#x4EC5;&#x4EC5;&#x6BD4;findViewById&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x66F4;&#x52A0;&#x5FEB;&#xFF01;&#x7ED1;&#x5B9A;&#x7A0B;&#x5E8F;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x8986;&#x76D6;&#x6240;&#x6709;layout&#x7684;view&#xFF0C;&#x628A;view&#x5206;&#x914D;&#x5230;field&#x3002;&#x5F53;&#x4F60;&#x8FD0;&#x884C;findViewById&#xFF0C;&#x7684;&#x65F6;&#x5019;view&#x7ED3;&#x6784;&#x6BCF;&#x6B21;&#x90FD;&#x4F1A;&#x88AB;&#x904D;&#x5386;&#x67E5;&#x627E;&#x3002; &#x4F60;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x4E00;&#x4EF6;&#x4E8B;:&#x5B83;&#x5BF9;&#x4F60;&#x7684;&#x53D8;&#x91CF;&#x540D;&#x4F7F;&#x7528;&#x4E86;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x6CD5;&#xFF08;&#x6BD4;&#x5982;hello_world.html &#x53D8;&#x6210;&#x7C7B; HelloWorldBinding&#xFF09;,&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x7ED9;&#x5B83;&#x7684;id&#x662F;&#x201C;@+id/hello_text&#x201D;,&#x90A3;&#x4E48;field&#x7684;&#x540D;&#x79F0;&#x5C06;&#x4F1A;&#x662F; helloText. &#x5F53;&#x4F60;&#x6B63;&#x5728;inflate&#x4F60;&#x5E03;&#x5C40;&#x91CC;RecyclerView,ViewPager&#xFF0C;&#x6216;&#x5176;&#x4ED6;&#x4E0D;&#x8BBE;&#x7F6E;Activity&#x5185;&#x5BB9;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x4F60;&#x5C06;&#x5E0C;&#x671B;&#x5728;&#x751F;&#x6210;&#x7684;&#x7C7B;&#x4E0A;&#x7528;&#x751F;&#x6210;&#x7684;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x51E0;&#x4E2A;&#x7248;&#x672C;&#x5339;&#x914D;LayoutInflater,&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x4F60;&#x6700;&#x9002;&#x5408;&#x98DF;&#x7528;&#x7684;.&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; HelloWorldBinding binding = HelloWorldBinding.inflate( getLayoutInflater(), container, attachToContainer); &#x5982;&#x679C;&#x4F60;&#x4EEC;&#x6709;&#x628A;&#x88AB;inflate&#x7684;view &#x9644;&#x52A0;&#x5230;&#x5305;&#x542B;&#x4ED6;&#x4EEC;&#x7684;ViewGroup&#x4E0A;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8BBF;&#x95EE;&#x88AB;infalte&#x7684;view&#x7684;view&#x7ED3;&#x6784;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x7528;binding&#x7684;getRoot()&#x65B9;&#x6CD5;&#xFF1A; linearLayout.addView(binding.getRoot()); &#x73B0;&#x5728;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x8003;&#x8651;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x6709;&#x4E00;&#x4E2A;layout&#x5305;&#x542B;&#x540C;&#x6B65;view&#x7684;&#x4E0D;&#x540C;&#x914D;&#x7F6E;&#x5462;&#xFF1F;layout&#x9884;&#x6267;&#x884C;&#x548C;&#x8FD0;&#x884C;&#x65F6;inflate&#x9636;&#x6BB5;&#x901A;&#x8FC7;&#x6DFB;&#x52A0;&#x6240;&#x6709;View &#x7684;id&#x5230;&#x751F;&#x6210;&#x7684;&#x7C7B;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x88AB;inflate&#x7684;&#x8BDD;&#x8BBE;&#x7F6E;&#x4E3A;null&#x3002; &#x76F8;&#x5F53;&#x795E;&#x5947;&#xFF0C;&#x4E0D;&#x662F;&#x5417;&#xFF1F;&#x6700;&#x597D;&#x7684;&#x90E8;&#x5206;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x6CA1;&#x6709;&#x53CD;&#x5C04;&#x548C;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x9AD8;&#x6D88;&#x8017;&#x7684;&#x6280;&#x672F;&#x3002;&#x628A;&#x4ED6;&#x5C11;&#x91CF;&#x6DFB;&#x52A0;&#x5230;&#x4F60;&#x73B0;&#x6709;&#x7A0B;&#x5E8F;&#x91CC;&#x9762;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#xFF0C;&#x4ED6;&#x80FD;&#x8BA9;&#x4F60;&#x7684;&#x751F;&#x6D3B;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF0C;&#x8BA9;&#x4F60;&#x7684;layout&#x52A0;&#x8F7D;&#x7684;&#x66F4;&#x5FEB;&#xFF01;","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://xpleeandroid.github.io/tags/android/"},{"name":"翻译","slug":"翻译","permalink":"http://xpleeandroid.github.io/tags/翻译/"}]},{"title":"GoodNight","slug":"GoodNight","date":"2016-06-25T15:50:44.000Z","updated":"2016-06-28T05:42:00.662Z","comments":true,"path":"2016/06/25/GoodNight/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/25/GoodNight/","excerpt":"","text":"use one day for establish this blog,thanks for opensource! Now we can say good night! ``","categories":[],"tags":[{"name":"随想","slug":"随想","permalink":"http://xpleeandroid.github.io/tags/随想/"}]}]}