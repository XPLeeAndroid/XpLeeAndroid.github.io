{"meta":{"title":"李晓鹏","subtitle":"Adam","description":"屌丝程序员，正在寻找出路。","author":"Adam","url":"http://xpleeandroid.github.io"},"pages":[{"title":"标签","date":"2016-06-26T06:49:10.000Z","updated":"2016-06-26T07:04:03.307Z","comments":true,"path":"tags/index.html","permalink":"http://xpleeandroid.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"翻译:no more findViewById","slug":"translate-no-more-findviewbyid","date":"2016-06-26T06:40:57.000Z","updated":"2016-06-26T08:55:35.558Z","comments":true,"path":"2016/06/26/translate-no-more-findviewbyid/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/26/translate-no-more-findviewbyid/","excerpt":"","text":"No More findViewByIdAndroid Studio开发android程序的一个小特点是数据绑定。我会在将来的文章中讲解它的其他一些优雅的特点，但是你要了解的最基础的是怎样消除findViewById. 1TextView hello = (TextView) findViewById(R.id.hello); 虽然现在有很多试用的方法可以省略这些多余代码，但是Android Studio 1.5以及更高版本已经有官方的方法了。 首先，你必须在Application的build.gradle里的android块内填写如下代码： android { … dataBinding.enabled = true } 下一步就是在你的layout文件的最外层添加 标签，不管你用的是任何 ViewGroup: &lt;layout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt; &lt;RelativeLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot; android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot; android:paddingTop=&quot;@dimen/activity_vertical_margin&quot; android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot; tools:context=&quot;.MainActivity&quot;&gt; &lt;TextView android:id=&quot;@+id/hello&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;/&gt; &lt;/RelativeLayout&gt; Layout标签告诉Android Studio这个layout在编译时将进行额外的操作，查找到所有感兴趣的view,并且标签为下一步。所有外部没有包layout标签的布局将不会执行额外操作。所以你可以在新项目中少量使用而无需改变项目中其他的部分。 下面要做的就是告诉它在运行时分别加载你的layout。因为它向后兼容，所以不需要依赖新框架的改变来加载这些预执行的layout文件。因此你只需对程序做一个轻微的改变。 从一个Activity,不是： 123 setContentView(R.layout.hello_world);TextView hello = (TextView) findViewById(R.id.hello);hello.setText(\"Hello World\"); 而是这样加载： HelloWorldBinding binding = DataBindingUtil.setContentView(this, R.layout.hello_world); binding.hello.setText(&quot;Hello World&quot;); 你可以看到 HelloWordBinding这个类自动为hello_world.xml生成并且id为“@+id/hello”的view分配到了一个hello的field你可以使用。没有强制类型转换，没有findViewById.","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://xpleeandroid.github.io/tags/android/"},{"name":"翻译","slug":"翻译","permalink":"http://xpleeandroid.github.io/tags/翻译/"}]},{"title":"GoodNight","slug":"GoodNight","date":"2016-06-25T15:50:44.000Z","updated":"2016-06-25T15:56:24.037Z","comments":true,"path":"2016/06/25/GoodNight/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/25/GoodNight/","excerpt":"","text":"use one day for establish this blog,thanks for opensource! Now we can say good night! ``","categories":[],"tags":[{"name":"随想","slug":"随想","permalink":"http://xpleeandroid.github.io/tags/随想/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-06-25T10:46:30.084Z","updated":"2016-06-25T10:46:30.084Z","comments":true,"path":"2016/06/25/hello-world/","link":"","permalink":"http://xpleeandroid.github.io/2016/06/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}